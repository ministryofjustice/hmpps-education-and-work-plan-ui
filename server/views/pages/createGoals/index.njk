{% extends "../../partials/layout.njk" %}

{% set pageId = "create-goals" %}
{% set pageTitle = "Create goals with prisoner" %}

{% block beforeContent %}
  {% include "../../partials/breadcrumb.njk" %}
{% endblock %}

{% block content %}

  {% if errors.length > 0 %}
    {{ govukErrorSummary({
      titleText: 'There is a problem',
      errorList: errors,
      attributes: { 'data-qa-errors': true }
    }) }}
  {% endif %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      <h1 class="govuk-heading-l">Create goals with {{ prisonerSummary.firstName | safe }} {{ prisonerSummary.lastName | safe }}</h1>

      <h2 class="govuk-heading-s">Add goals</h2>
      <p class="govuk-hint">
        Goals should be SMART, meaning 'specific', 'measurable', 'achievable', 'relevant' and 'time-bound'. SMART goals allow progress to be better measured and evaluated.<br>
        You can add the steps to achieve the goal on the next page.
      </p>

      <form class="form" method="post" novalidate="">
        <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
        <input type="hidden" name="prisonNumber" value="{{ form.prisonNumber }}" />

        <div class="govuk-summary-card">
          <div class="govuk-summary-card__title-wrapper">
            <h2 class="govuk-summary-card__title">
              Goal
            </h2>
          </div>
          <div class="govuk-summary-card__content">

              {{ govukCharacterCount({
                name: "title",
                id: "title",
                value: form.title,
                maxlength: 512,
                label: {
                  text: "Describe the goal",
                  classes: "govuk-label--s"
                },
                errorMessage: errors | findError('title')
              }) }}

              {% set targetCompletionDateItems = [] %}

              {% for futureGoalTargetDate in futureGoalTargetDates %}
                {% set targetCompletionDateItems = (targetCompletionDateItems.push({
                  "value": futureGoalTargetDate.value,
                  "text": futureGoalTargetDate.text
                  }), targetCompletionDateItems)
                %}
              {% endfor %}

              {% set anotherDateHtml %}
                {{ govukDateInput({
                  id: "another-date",
                  fieldset: {
                    legend: {
                      text: "What date are they aiming to achieve this by?",
                      classes: "govuk-visually-hidden"
                    }
                  },
                  hint: {
                    text: "For example, 27 3 2007"
                  },
                  items: [
                    {
                      id: 'another-date-day',
                      label: 'Day',
                      name: 'targetCompletionDate-day',
                      classes: 'govuk-input--width-2',
                      value: form['targetCompletionDate-day']
                    },
                    {
                      id: 'another-date-month',
                      label: 'Month',
                      name: 'targetCompletionDate-month',
                      classes: 'govuk-input--width-2',
                      value: form['targetCompletionDate-month']
                    },
                    {
                      id: 'another-date-year',
                      label: 'Year',
                      name: 'targetCompletionDate-year',
                      classes: 'govuk-input--width-4',
                      value: form['targetCompletionDate-year']
                    }
                  ]
                }) }}
              {% endset -%}

              {% set targetCompletionDateItems = (targetCompletionDateItems.push({
                "value": "another-date",
                "text": "set another date",
                "conditional": {
                  "html": anotherDateHtml
                }
                }), targetCompletionDateItems)
              %}

              {{ govukRadios({
                name: "targetCompletionDate",
                id: "targetCompletionDate",
                value: form.targetCompletionDate,
                fieldset: {
                  legend: {
                    text: "When are they aiming to achieve this by?",
                    classes: "govuk-fieldset__legend--s"
                  }
                },
                items: targetCompletionDateItems,
                errorMessage: errors | findError('targetCompletionDate')
              }) }}

            <div class="govuk-form-group">
              <!-- TODO: Populate the stepNumber object to relect the correct number on the UI -->
              {% set stepTitleLabel = 'Step ' + form.stepNumber %}
              <!-- TODO: Populate the stepTitle object to reflect the correct step title on the UI -->
              {{ govukCharacterCount({
                name: "stepTitle",
                id: "stepTitle",
                value: form.stepTitle,
                maxlength: 512,
                rows: 2,
                label: {
                  text: stepTitleLabel,
                  classes: "govuk-label--s",
                  isPageHeading: false
                },
                hint: {
                  text: "Describe this step"
                },
                errorMessage: errors | findError('stepTitle')
              }) }}

            </div>

            <div class="govuk-form-group govuk-!-margin-bottom-2">
              {{ govukButton({
                id: "add-another-step-button",
                name: "action",
                value: "add-another-step",
                text: "Add another step to this goal",
                classes: "govuk-button--secondary"
              }) }}
            </div>

            <div class="govuk-form-group">
              <div class="govuk-form-group">
                <h1 class="govuk-label-wrapper">
                  <label class="govuk-label govuk-label--s" for="note">
                    Add a note to this goal (optional)
                  </label>
                </h1>
                <div class="govuk-warning-text govuk-!-margin-top-4" id="warning-text">
                  <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
                  <strong class="govuk-warning-text__text">
                    <span class="govuk-visually-hidden">Warning</span>
                    This note will be seen by the prisoner and other prison staff.
                  </strong>
                </div>
                {{ errors | findError('note') }}
                <textarea class="govuk-textarea" id="note" name="note" rows="5" aria-describedby="warning-text">{{ form.note }}</textarea>
              </div>
            </div>


          </div>
        </div>

        {{ govukButton({
          text: "Save to learning and work progress plan"
        }) }}

      </form>

    </div>
  </div>

{% endblock %}

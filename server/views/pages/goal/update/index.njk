{% extends "../../../partials/layout.njk" %}

{% set pageId = "update-goal" %}
{% set pageTitle = applicationName + " - Home" %}

{% block beforeContent %}
  {{ govukBreadcrumbs({
    items: [
      {
        text: "Digital Prison Services",
        href: dpsUrl
      },
      {
        text: "Manage learning and work progress",
        href: "/"
      },
      {
        text: "Manage " + prisonerSummary.firstName | capitalize + " " + prisonerSummary.lastName | capitalize + "'s learning plan",
        href: "/plan/" + prisonerSummary.prisonNumber + "/view/overview"
      }
    ],
    classes: 'govuk-!-display-none-print'
  }) }}
{% endblock %}

{% block content %}

  {% if errors.length > 0 %}
    {{ govukErrorSummary({
      titleText: 'There is a problem',
      errorList: errors,
      attributes: { 'data-qa-errors': true }
    }) }}
  {% endif %}

  {% include "../../../partials/prisonerBanner.njk" %}

  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

      <h1 class="govuk-heading-l">You are updating a goal for {{ prisonerSummary.firstName | capitalize }} {{ prisonerSummary.lastName | capitalize }}</h1>

        <form class="form" method="post" novalidate="">
            <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
            <input type="hidden" name="reference" value="{{ form.reference }}" data-qa="goal-reference" />
            <input type="hidden" name="status" value="{{ form.status }}" data-qa="goal-status" />

            {{ govukTextarea({
              name: "title",
              id: "title",
              label: {
                text: "Description",
                classes: "govuk-label--m"
              },
              value: form.title,
              errorMessage: errors | findError('title')
            }) }}

            {{ govukTextarea({
              name: "note",
              id: "note",
              label: {
                text: "Add or edit note",
                classes: "govuk-label--m"
              },
              value: form.note,
              errorMessage: errors | findError('note')
            }) }}

          <hr class="govuk-section-break govuk-section-break--visible govuk-section-break--m">

          <h2 class="govuk-heading-m" id="edit-and-remove-steps" tabindex="-1">Edit and remove steps</h2>

            {% for step in form.steps %}
              <input type="hidden" name="steps[{{ (loop.index-1) }}][reference]" value="{{ step.reference }}" data-qa="step-{{ (loop.index-1) }}-reference" />
              <input type="hidden" name="steps[{{ (loop.index-1) }}][stepNumber]" value="{{ step.stepNumber }}" />

              {% call govukFieldset({
                classes: 'moj-add-another__item',
                legend: {
                  text: 'Step ' + step.stepNumber,
                  classes: 'moj-add-another__title govuk-fieldset__legend--m',
                  isPageHeading: false
                }
              }) %}

              {{ govukTextarea({
                name: 'steps[' + (loop.index-1) + '][title]',
                id: 'steps[' + (loop.index-1) + '][title]',
                attributes: { 'data-qa': 'step-' + (loop.index-1) + '-title-field' },
                label: {
                  text: "Description",
                  classes: "govuk-label--m",
                  isPageHeading: false
                },
                value: step.title,
                errorMessage: errors | findError('steps[' + (loop.index-1) + '][title]')
              }) }}

              {{ govukSelect({
                name: 'steps[' + (loop.index-1) + '][status]',
                id: 'steps[' + (loop.index-1) + '][status]',
                attributes: { 'data-qa': 'step-' + (loop.index-1) + '-status-field' },
                label: {
                  text: "Status",
                  classes: "govuk-label--m",
                  isPageHeading: false
                },
                items: [
                  {
                    value: "NOT_STARTED",
                    text: "Not started",
                    selected: true if step.status == 'NOT_STARTED' else false
                  },
                  {
                    value: "ACTIVE",
                    text: "Started",
                    selected: true if step.status == 'ACTIVE' else false
                  },
                  {
                    value: "COMPLETE",
                    text: "Completed",
                    selected: true if step.status == 'COMPLETE' else false
                  }
                ],
                errorMessage: errors | findError('steps[' + (loop.index-1) + '][status]')
              }) }}

              {{ govukRadios({
                name: 'steps[' + (loop.index-1) + '][targetDateRange]',
                id: 'steps[' + (loop.index-1) + '][targetDateRange]',
                attributes: { 'data-qa': 'step-' + (loop.index-1) + '-target-date-range-field' },
                fieldset: {
                  legend: {
                    text: "When will they achieve this by?",
                    isPageHeading: false,
                    classes: "govuk-label--m"
                  }
                },
                items: [
                  {
                    value: "ZERO_TO_THREE_MONTHS",
                    text: "0 to 3 months",
                    checked: true if step.targetDateRange == 'ZERO_TO_THREE_MONTHS' else false
                  },
                  {
                    value: "THREE_TO_SIX_MONTHS",
                    text: "3 to 6 months",
                    checked: true if step.targetDateRange == 'THREE_TO_SIX_MONTHS' else false
                  },
                  {
                    value: "SIX_TO_TWELVE_MONTHS",
                    text: "6 to 12 months",
                    checked: true if step.targetDateRange == 'SIX_TO_TWELVE_MONTHS' else false
                  },
                  {
                    value: "MORE_THAN_TWELVE_MONTHS",
                    text: "More than 12 months",
                    checked: true if step.targetDateRange == 'MORE_THAN_TWELVE_MONTHS' else false
                  }
                ],
                errorMessage: errors | findError('steps[' + (loop.index-1) + '][targetDateRange]')
              }) }}
              
              {% if loop.length > 1 %}
                {{ govukButton({
                  id: "delete-step-" + (loop.index-1),
                  attributes: {
                    'data-qa': 'step-' + (loop.index-1) + '-remove-button'
                  },
                  name: "action",
                  value: 'delete-step-[' + (loop.index-1) + ']',
                  text: "Remove",
                  classes: "govuk-button--secondary moj-add-another__remove-button"
                }) }}
              {% endif %}

              {% endcall %}
        
              <hr class="govuk-section-break govuk-section-break--visible govuk-section-break--m">
            {% endfor %}

            <div class="moj-button-action">
              {{ govukButton({
                id: "add-another-step-button",
                attributes: {
                  'data-qa': 'goal-update-add-another-step-button'
                },
                name: "action",
                value: "add-another-step",
                text: "Add another step",
                classes: "govuk-button--secondary govuk-!-margin-bottom-4"
              }) }}
            </div>

            <div class="moj-button-action">
              {{ govukButton({
                id: "submit-button",
                attributes: {
                  'data-qa': 'goal-update-submit-button'
                },
                name: "action",
                value: "submit-form",
                text: "Submit"
              }) }}
            </div>
        </form>

    </div>
  </div>

{% endblock %}

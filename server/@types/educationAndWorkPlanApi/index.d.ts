/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/action-plans/{prisonNumber}/goals/{goalReference}': {
    put: operations['updateGoal']
  }
  '/action-plans': {
    post: operations['getActionPlanSummaries']
  }
  '/action-plans/{prisonNumber}': {
    get: operations['getActionPlan']
    post: operations['createActionPlan']
  }
  '/action-plans/{prisonNumber}/goals': {
    post: operations['createGoals']
  }
  '/timelines/{prisonNumber}': {
    get: operations['getTimeline']
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    UpdateGoalRequest: {
      /**
       * Format: uuid
       * @description The Goal's unique reference. This is used as an identifier to update the required Goal. It is not possible or supported to update the `goalReference`.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      goalReference: string
      /**
       * @description A title explaining the aim of the goal.
       * @example Improve communication skills
       */
      title: string
      /**
       * @example null
       * @enum {string}
       */
      status: 'ACTIVE' | 'COMPLETED' | 'ARCHIVED'
      /**
       * @description A List of at least one Step.
       * @example null
       */
      steps: components['schemas']['UpdateStepRequest'][]
      /**
       * @description The identifier of the prison that the prisoner is currently resident at.
       * @example BXI
       */
      prisonId: string
      /**
       * Format: date
       * @description An optional ISO-8601 date representing the target completion date of the Goal.
       */
      targetCompletionDate?: string
      /**
       * @description Some additional notes related to the Goal.
       * @example Pay close attention to Peter's behaviour.
       */
      notes?: string
    }
    /**
     * @description A List of at least one Step.
     * @example null
     */
    UpdateStepRequest: {
      /**
       * @example null
       * @enum {string}
       */
      status: 'NOT_STARTED' | 'ACTIVE' | 'COMPLETE'
      /**
       * @description A title describing the step
       * @example Book first aid course
       */
      title: string
      /**
       * Format: int32
       * @description The number (position) of the Step within the overall Goal.
       * @example 1
       */
      sequenceNumber: number
      /**
       * Format: uuid
       * @description Optional reference number for the Step. The Step's unique reference. This is used as an identifier to update the required Step. It is not possible or supported to update the `stepReference` for an existing step. If the Step reference is not supplied this will be treated as a new Step and will be added to the Goal.
       * @example d38a6c41-13d1-1d05-13c2-24619966119b
       */
      stepReference?: string
    }
    GetActionPlanSummariesRequest: {
      /**
       * @description A List of at least one prison number.
       * @example null
       */
      prisonNumbers: string[]
    }
    ActionPlanSummaryListResponse: {
      /**
       * @description A List of prisoners' Action Plan summaries. Can be empty but not null.
       * @example null
       */
      actionPlanSummaries: components['schemas']['ActionPlanSummaryResponse'][]
    }
    /**
     * @description A List of prisoners' Action Plan summaries. Can be empty but not null.
     * @example null
     */
    ActionPlanSummaryResponse: {
      /**
       * Format: uuid
       * @description The Action Plan's unique reference
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The ID of the prisoner
       * @example A1234BC
       */
      prisonNumber: string
      /**
       * Format: date
       * @description An optional ISO-8601 date representing when the Action Plan is up for review.
       */
      reviewDate?: string
    }
    CreateActionPlanRequest: {
      /**
       * @description A List of at least one Goal.
       * @example null
       */
      goals: components['schemas']['CreateGoalRequest'][]
      /**
       * Format: date
       * @description An optional ISO-8601 date representing when the Action Plan is up for review.
       */
      reviewDate?: string
    }
    /**
     * @description A List of at least one Goal.
     * @example null
     */
    CreateGoalRequest: {
      /**
       * @description A title explaining the aim of the goal.
       * @example Improve communication skills
       */
      title: string
      /**
       * @description A List of at least one Step.
       * @example null
       */
      steps: components['schemas']['CreateStepRequest'][]
      /**
       * @description The identifier of the prison that the prisoner is currently resident at.
       * @example BXI
       */
      prisonId: string
      /**
       * Format: date
       * @description An optional ISO-8601 date representing the target completion date of the Goal.
       */
      targetCompletionDate?: string
      /**
       * @description Some additional notes related to the Goal.
       * @example Pay close attention to Peter's behaviour.
       */
      notes?: string
    }
    /**
     * @description A List of at least one Step.
     * @example null
     */
    CreateStepRequest: {
      /**
       * @description A title describing the step
       * @example Book first aid course
       */
      title: string
      /**
       * Format: int32
       * @description The number (position) of the Step within the overall Goal.
       * @example 1
       */
      sequenceNumber: number
    }
    CreateGoalsRequest: {
      /**
       * @description A List of at least one Goal.
       * @example null
       */
      goals: components['schemas']['CreateGoalRequest'][]
    }
    /**
     * @description A List of at least one TimelineEventResponse.
     * @example null
     */
    TimelineEventResponse: {
      /**
       * Format: uuid
       * @description The Timeline event's unique reference
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * @description A reference to the originating entity that was created, or updated during this event, such as a Prisoner's Goal or Induction. Typically this will be a UUID, but does not have to be.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      sourceReference: string
      /**
       * @example null
       * @enum {string}
       */
      eventType:
        | 'INDUCTION_CREATED'
        | 'INDUCTION_UPDATED'
        | 'ACTION_PLAN_CREATED'
        | 'GOAL_CREATED'
        | 'GOAL_UPDATED'
        | 'GOAL_STARTED'
        | 'GOAL_COMPLETED'
        | 'GOAL_ARCHIVED'
        | 'STEP_UPDATED'
        | 'STEP_NOT_STARTED'
        | 'STEP_STARTED'
        | 'STEP_COMPLETED'
      /**
       * @description The identifier of the prison that the prisoner was at when the event occurred.
       * @example BXI
       */
      prisonId: string
      /**
       * @description The username of the person who caused this event. Set to 'system' if the event was not actioned by a DPS user.
       * @example asmith_gen
       */
      actionedBy: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the event occurred.
       * @example 2023-06-19T09:39:44Z
       */
      timestamp: string
      /**
       * Format: uuid
       * @description A correlationId for this and any other TimelineEvents that occurred at the same time (i.e. within same atomic action). For example, this could be an update to a Goal, plus one or more of its child Steps. If required, this allows a client to easily group the events together.
       * @example 113d1833-0ce1-45ad-ab44-878c9d589358
       */
      correlationId: string
      /**
       * @description Contextual information that's relevant to the event in question. For example the title of a Goal that was completed.
       * @example Learn French
       */
      contextualInfo?: string
      /**
       * @description The display name of the person who caused this event, if applicable.
       * @example Alex Smith
       */
      actionedByDisplayName?: string
    }
    TimelineResponse: {
      /**
       * Format: uuid
       * @description The Timeline's unique reference.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * @description The ID of the prisoner.
       * @example A1234BC
       */
      prisonNumber: string
      /**
       * @description A List of at least one TimelineEventResponse.
       * @example null
       */
      events: components['schemas']['TimelineEventResponse'][]
    }
    ActionPlanResponse: {
      /**
       * Format: uuid
       * @description The Action Plan's unique reference
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The ID of the prisoner
       * @example A1234BC
       */
      prisonNumber: string
      /**
       * @description A List of at least one or more Goals.
       * @example null
       */
      goals: components['schemas']['GoalResponse'][]
      /**
       * Format: date
       * @description An optional ISO-8601 date representing when the Action Plan is up for review.
       */
      reviewDate?: string
    }
    /**
     * @description A List of at least one or more Goals.
     * @example null
     */
    GoalResponse: {
      /**
       * Format: uuid
       * @description The Goal's unique reference
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      goalReference: string
      /**
       * @description A title explaining the aim of the goal.
       * @example Improve communication skills
       */
      title: string
      /**
       * @example null
       * @enum {string}
       */
      status: 'ACTIVE' | 'COMPLETED' | 'ARCHIVED'
      /**
       * @description A List of at least one Step.
       * @example null
       */
      steps: components['schemas']['StepResponse'][]
      /**
       * @description The DPS username of the person who created the goal.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created the goal.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Goal was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when the Goal was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated the goal.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated the goal.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Goal was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when the Goal was updated.
       * @example BXI
       */
      updatedAtPrison: string
      /**
       * Format: date
       * @description An optional ISO-8601 date representing the target completion date of the Goal.
       */
      targetCompletionDate?: string
      /**
       * @description Some additional notes related to the Goal.
       * @example Pay close attention to Peter's behaviour.
       */
      notes?: string
    }
    /**
     * @description A List of at least one Step.
     * @example null
     */
    StepResponse: {
      /**
       * Format: uuid
       * @description A unique reference for the Step
       * @example d38a6c41-13d1-1d05-13c2-24619966119b
       */
      stepReference: string
      /**
       * @description A title describing the step
       * @example Book communication skills course
       */
      title: string
      /**
       * @example null
       * @enum {string}
       */
      status: 'NOT_STARTED' | 'ACTIVE' | 'COMPLETE'
      /**
       * Format: int32
       * @description The number (position) of the Step within the overall Goal.
       * @example 1
       */
      sequenceNumber: number
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export interface operations {
  updateGoal: {
    parameters: {
      path: {
        prisonNumber: string
        goalReference: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateGoalRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: never
    }
  }
  getActionPlanSummaries: {
    requestBody: {
      content: {
        'application/json': components['schemas']['GetActionPlanSummariesRequest']
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['ActionPlanSummaryListResponse']
        }
      }
    }
  }
  getActionPlan: {
    parameters: {
      path: {
        prisonNumber: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['ActionPlanResponse']
        }
      }
    }
  }
  createActionPlan: {
    parameters: {
      path: {
        prisonNumber: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateActionPlanRequest']
      }
    }
    responses: {
      /** @description Created */
      201: never
    }
  }
  createGoals: {
    parameters: {
      path: {
        prisonNumber: string
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateGoalsRequest']
      }
    }
    responses: {
      /** @description Created */
      201: never
    }
  }
  getTimeline: {
    parameters: {
      path: {
        prisonNumber: string
      }
    }
    responses: {
      /** @description OK */
      200: {
        content: {
          'application/json': components['schemas']['TimelineResponse']
        }
      }
    }
  }
}

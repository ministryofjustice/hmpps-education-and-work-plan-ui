/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/queue-admin/retry-dlq/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['retryDlq']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/retry-all-dlqs': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['retryAllDlqs']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/purge-queue/{queueName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['purgeQueue']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/person/{prisonNumber}/education': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getEduction']
    put: operations['updateEducation']
    post: operations['createEducation']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/inductions/{prisonNumber}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getInduction']
    put: operations['updateInduction']
    post: operations['createInduction']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/conversations/{prisonNumber}/{conversationReference}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getConversation']
    put: operations['updateConversation']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/reviews/schedule-status': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['updateLatestReviewScheduleStatus']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/goals/{goalReference}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getPrisonerGoal']
    put: operations['updateGoal']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/goals/{goalReference}/unarchive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['unarchiveGoal']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/goals/{goalReference}/complete': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['completeGoal']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/goals/{goalReference}/archive': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['archiveGoal']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/conversations/{prisonNumber}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getConversations']
    put?: never
    post: operations['createConversation']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/ciag/induction/list': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['getInductionSummaries']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['getActionPlanSummaries']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getActionPlan']
    put?: never
    post: operations['createActionPlan']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/reviews': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getActionPlanReviews']
    put?: never
    post: operations['createActionPlanReview']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/goals': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getGoals']
    put?: never
    post: operations['createGoals']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/timelines/{prisonNumber}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getTimeline']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/subject-access-request': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Provides content for a prisoner to satisfy the needs of a subject access request on their behalf
     * @description Requires role SAR_DATA_ACCESS or additional role as specified by hmpps.sar.additionalAccessRole configuration.
     */
    get: operations['getSarContentByReference']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/queue-admin/get-dlq-messages/{dlqName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getDlqMessages']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/inductions/{prisonNumber}/induction-schedule': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getInductionSchedule']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/action-plans/{prisonNumber}/reviews/review-schedules': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getActionPlanReviewSchedules']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    RetryDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    PurgeQueueResult: {
      /** Format: int32 */
      messagesFoundCount: number
    }
    /**
     * @description A list of achieved qualifications that should be updated or created as part of the education record.
     * @example null
     */
    CreateOrUpdateAchievedQualificationRequest: {
      /**
       * @description The subject of the qualification.
       * @example Maths GCSE
       */
      subject: string
      /**
       * @example null
       * @enum {string}
       */
      level:
        | 'ENTRY_LEVEL'
        | 'LEVEL_1'
        | 'LEVEL_2'
        | 'LEVEL_3'
        | 'LEVEL_4'
        | 'LEVEL_5'
        | 'LEVEL_6'
        | 'LEVEL_7'
        | 'LEVEL_8'
      /**
       * @description The grade which was achieved (if known/relevant).   Note: This is a free format value and there is no type or enum. Therefore values can be "A", "B", "C" etc, but also "1", "2", "3", "Pass", "Distinction", "Merit", "First class honours" etc. It is up to the consumer to interpret this data as necessary.
       * @example Distinction
       */
      grade: string
      /**
       * Format: uuid
       * @description The unique reference for this Achieved Qualification if this request object is being used to update the qualification
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference?: string
    }
    UpdateEducationRequest: {
      /**
       * Format: uuid
       * @description The unique reference of the prisoner's Education record.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @example null
       * @enum {string}
       */
      educationLevel:
        | 'PRIMARY_SCHOOL'
        | 'SECONDARY_SCHOOL_LEFT_BEFORE_TAKING_EXAMS'
        | 'SECONDARY_SCHOOL_TOOK_EXAMS'
        | 'FURTHER_EDUCATION_COLLEGE'
        | 'UNDERGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'POSTGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'NOT_SURE'
      /**
       * @description A list of achieved qualifications that should be updated or created as part of the education record.
       * @example null
       */
      qualifications: components['schemas']['CreateOrUpdateAchievedQualificationRequest'][]
    }
    /**
     * @description One or more future work interests that the Prisoner has.
     * @example null
     */
    FutureWorkInterest: {
      /**
       * @example null
       * @enum {string}
       */
      workType:
        | 'OUTDOOR'
        | 'CONSTRUCTION'
        | 'DRIVING'
        | 'BEAUTY'
        | 'HOSPITALITY'
        | 'TECHNICAL'
        | 'MANUFACTURING'
        | 'OFFICE'
        | 'RETAIL'
        | 'SPORTS'
        | 'WAREHOUSING'
        | 'WASTE_MANAGEMENT'
        | 'EDUCATION_TRAINING'
        | 'CLEANING_AND_MAINTENANCE'
        | 'OTHER'
      /**
       * @description A specific type of work interest that does not fit the given 'workType' values. Mandatory when 'workType' is 'OTHER'.
       * @example null
       */
      workTypeOther?: string
      /**
       * @description The role within a Prisoner's area of work interest.
       * @example null
       */
      role?: string
    }
    /**
     * @description A list of in-prison training that the Prisoner is interested in.
     * @example null
     */
    InPrisonTrainingInterest: {
      /**
       * @example null
       * @enum {string}
       */
      trainingType:
        | 'BARBERING_AND_HAIRDRESSING'
        | 'CATERING'
        | 'COMMUNICATION_SKILLS'
        | 'ENGLISH_LANGUAGE_SKILLS'
        | 'FORKLIFT_DRIVING'
        | 'INTERVIEW_SKILLS'
        | 'MACHINERY_TICKETS'
        | 'NUMERACY_SKILLS'
        | 'RUNNING_A_BUSINESS'
        | 'SOCIAL_AND_LIFE_SKILLS'
        | 'WELDING_AND_METALWORK'
        | 'WOODWORK_AND_JOINERY'
        | 'OTHER'
      /**
       * @description A specific type of in-prison training that does not fit the given 'trainingType' values. Mandatory when 'trainingType' is 'OTHER'.
       * @example null
       */
      trainingTypeOther?: string
    }
    /**
     * @description A list of in-prison work that the Prisoner is interested in.
     * @example null
     */
    InPrisonWorkInterest: {
      /**
       * @example null
       * @enum {string}
       */
      workType:
        | 'CLEANING_AND_HYGIENE'
        | 'COMPUTERS_OR_DESK_BASED'
        | 'GARDENING_AND_OUTDOORS'
        | 'KITCHENS_AND_COOKING'
        | 'MAINTENANCE'
        | 'PRISON_LAUNDRY'
        | 'PRISON_LIBRARY'
        | 'TEXTILES_AND_SEWING'
        | 'WELDING_AND_METALWORK'
        | 'WOODWORK_AND_JOINERY'
        | 'OTHER'
      /**
       * @description A specific type of in-prison work that does not fit the given 'workType' values. Mandatory when 'workType' is 'OTHER'.
       * @example null
       */
      workTypeOther?: string
    }
    /**
     * @description One or more interests that the Prisoner feels they have.
     * @example null
     */
    PersonalInterest: {
      /**
       * @example null
       * @enum {string}
       */
      interestType:
        | 'COMMUNITY'
        | 'CRAFTS'
        | 'CREATIVE'
        | 'DIGITAL'
        | 'KNOWLEDGE_BASED'
        | 'MUSICAL'
        | 'OUTDOOR'
        | 'NATURE_AND_ANIMALS'
        | 'SOCIAL'
        | 'SOLO_ACTIVITIES'
        | 'SOLO_SPORTS'
        | 'TEAM_SPORTS'
        | 'WELLNESS'
        | 'OTHER'
        | 'NONE'
      /**
       * @description A specific type of personal interest that does not fit the given 'interestType' values. Mandatory when 'interestType' is 'OTHER'.
       * @example null
       */
      interestTypeOther?: string
    }
    /**
     * @description One or more skills that the Prisoner feels they have.
     * @example null
     */
    PersonalSkill: {
      /**
       * @example null
       * @enum {string}
       */
      skillType:
        | 'COMMUNICATION'
        | 'POSITIVE_ATTITUDE'
        | 'RESILIENCE'
        | 'SELF_MANAGEMENT'
        | 'TEAMWORK'
        | 'THINKING_AND_PROBLEM_SOLVING'
        | 'WILLINGNESS_TO_LEARN'
        | 'OTHER'
        | 'NONE'
      /**
       * @description A specific type of personal skill that does not fit the given 'skillType' values. Mandatory when 'skillType' is 'OTHER'.
       * @example null
       */
      skillTypeOther?: string
    }
    /**
     * @description A list of the Prisoner's previous work experiences.
     * @example null
     */
    PreviousWorkExperience: {
      /**
       * @example null
       * @enum {string}
       */
      experienceType:
        | 'OUTDOOR'
        | 'CONSTRUCTION'
        | 'DRIVING'
        | 'BEAUTY'
        | 'HOSPITALITY'
        | 'TECHNICAL'
        | 'MANUFACTURING'
        | 'OFFICE'
        | 'RETAIL'
        | 'SPORTS'
        | 'WAREHOUSING'
        | 'WASTE_MANAGEMENT'
        | 'EDUCATION_TRAINING'
        | 'CLEANING_AND_MAINTENANCE'
        | 'OTHER'
      /**
       * @description A type of work experience, which is not listed in 'experienceType' Enum. Mandatory when 'experienceType' is 'OTHER'.
       * @example null
       */
      experienceTypeOther?: string
      /**
       * @description The role the Prisoner had.
       * @example null
       */
      role?: string
      /**
       * @description Any additional details of the work experience.
       * @example null
       */
      details?: string
    }
    /** @example null */
    UpdateFutureWorkInterestsRequest: {
      /**
       * @description One or more future work interests that the Prisoner has.
       * @example null
       */
      interests: components['schemas']['FutureWorkInterest'][]
      /**
       * Format: uuid
       * @description A unique reference for a FutureWorkInterests resource (if it already exists).
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference?: string
    }
    /** @example null */
    UpdateInPrisonInterestsRequest: {
      /**
       * @description A list of in-prison work that the Prisoner is interested in.
       * @example null
       */
      inPrisonWorkInterests: components['schemas']['InPrisonWorkInterest'][]
      /**
       * @description A list of in-prison training that the Prisoner is interested in.
       * @example null
       */
      inPrisonTrainingInterests: components['schemas']['InPrisonTrainingInterest'][]
      /**
       * Format: uuid
       * @description A unique reference for a InPrisonInterests resource (if it already exists).
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference?: string
    }
    UpdateInductionRequest: {
      /**
       * Format: uuid
       * @description The Induction's unique reference.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      workOnRelease?: components['schemas']['UpdateWorkOnReleaseRequest']
      previousQualifications?: components['schemas']['UpdatePreviousQualificationsRequest']
      previousTraining?: components['schemas']['UpdatePreviousTrainingRequest']
      previousWorkExperiences?: components['schemas']['UpdatePreviousWorkExperiencesRequest']
      inPrisonInterests?: components['schemas']['UpdateInPrisonInterestsRequest']
      personalSkillsAndInterests?: components['schemas']['UpdatePersonalSkillsAndInterestsRequest']
      futureWorkInterests?: components['schemas']['UpdateFutureWorkInterestsRequest']
    }
    /** @example null */
    UpdatePersonalSkillsAndInterestsRequest: {
      /**
       * @description One or more skills that the Prisoner feels they have.
       * @example null
       */
      skills: components['schemas']['PersonalSkill'][]
      /**
       * @description One or more interests that the Prisoner feels they have.
       * @example null
       */
      interests: components['schemas']['PersonalInterest'][]
      /**
       * Format: uuid
       * @description A unique reference for a PersonalSkillsAndInterests resource (if it already exists).
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference?: string
    }
    /** @example null */
    UpdatePreviousQualificationsRequest: {
      /**
       * Format: uuid
       * @description A unique reference for a PreviousQualifications resource (if it already exists).
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference?: string
      /**
       * @example null
       * @enum {string}
       */
      educationLevel?:
        | 'PRIMARY_SCHOOL'
        | 'SECONDARY_SCHOOL_LEFT_BEFORE_TAKING_EXAMS'
        | 'SECONDARY_SCHOOL_TOOK_EXAMS'
        | 'FURTHER_EDUCATION_COLLEGE'
        | 'UNDERGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'POSTGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'NOT_SURE'
      /**
       * @description A list of the Prisoner's previous qualifications.   These can either be new qualfications without a reference field, or for any qualifications with a reference field they will be treated as updates.
       * @example null
       */
      qualifications?: components['schemas']['CreateOrUpdateAchievedQualificationRequest'][]
    }
    /** @example null */
    UpdatePreviousTrainingRequest: {
      /**
       * @description Any additional training that the Prisoner has completed in the past. Must not be empty ('NONE' is an option).
       * @example null
       */
      trainingTypes: (
        | 'CSCS_CARD'
        | 'FIRST_AID_CERTIFICATE'
        | 'FOOD_HYGIENE_CERTIFICATE'
        | 'FULL_UK_DRIVING_LICENCE'
        | 'HEALTH_AND_SAFETY'
        | 'HGV_LICENCE'
        | 'MACHINERY_TICKETS'
        | 'MANUAL_HANDLING'
        | 'TRADE_COURSE'
        | 'OTHER'
        | 'NONE'
      )[]
      /**
       * Format: uuid
       * @description A unique reference for a PreviousTraining resource (if it already exists).
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference?: string
      /**
       * @description A specific type of training that does not fit the given 'trainingTypes'. Mandatory when 'trainingTypes' includes 'OTHER'.
       * @example null
       */
      trainingTypeOther?: string
    }
    /** @example null */
    UpdatePreviousWorkExperiencesRequest: {
      /**
       * @example null
       * @enum {string}
       */
      hasWorkedBefore: 'YES' | 'NO' | 'NOT_RELEVANT'
      /**
       * Format: uuid
       * @description A unique reference for a PreviousWorkExperiences resource (if it already exists).
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference?: string
      /**
       * @description The reason why the whether the prisoner has worked before is not relevant. Mandatory when 'hasWorkedBefore' is 'NOT_RELEVANT'
       * @example Chris has declined to talk about his previous work experience as he is not looking for work on release because he is of retirement age.
       */
      hasWorkedBeforeNotRelevantReason?: string
      /**
       * @description A list of the Prisoner's previous work experiences.
       * @example null
       */
      experiences?: components['schemas']['PreviousWorkExperience'][]
    }
    /** @example null */
    UpdateWorkOnReleaseRequest: {
      /**
       * Format: uuid
       * @description A unique reference for a WorkOnRelease resource.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * @example null
       * @enum {string}
       */
      hopingToWork: 'YES' | 'NO' | 'NOT_SURE'
      /**
       * @description Factors affecting the Prisoner's ability to work.
       * @example null
       */
      affectAbilityToWork?: (
        | 'LIMITED_BY_OFFENCE'
        | 'CARING_RESPONSIBILITIES'
        | 'NEEDS_WORK_ADJUSTMENTS_DUE_TO_HEALTH'
        | 'UNABLE_TO_WORK_DUE_TO_HEALTH'
        | 'LACKS_CONFIDENCE_OR_MOTIVATION'
        | 'REFUSED_SUPPORT_WITH_NO_REASON'
        | 'RETIRED'
        | 'NO_RIGHT_TO_WORK'
        | 'NOT_SURE'
        | 'OTHER'
        | 'NONE'
      )[]
      /**
       * @description A specific factor affecting the Prisoner's ability to work. This is mandatory when 'affectAbilityToWork' includes 'OTHER'.
       * @example null
       */
      affectAbilityToWorkOther?: string
    }
    UpdateConversationRequest: {
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @description A note for this conversation
       * @example Pay close attention to Peter's behaviour.
       */
      note: string
    }
    Conversation: {
      /** Format: uuid */
      reference: string
      prisonNumber: string
      /** @enum {string} */
      type: 'INDUCTION' | 'GENERAL' | 'REVIEW'
      note: components['schemas']['ConversationNote']
    }
    ConversationNote: {
      /** Format: uuid */
      reference: string
      content: string
      createdBy?: string
      createdByDisplayName?: string
      /** Format: date-time */
      createdAt?: string
      createdAtPrison: string
      lastUpdatedBy?: string
      lastUpdatedByDisplayName?: string
      /** Format: date-time */
      lastUpdatedAt?: string
      lastUpdatedAtPrison: string
    }
    UpdateReviewScheduleStatusRequest: {
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @example null
       * @enum {string}
       */
      status:
        | 'SCHEDULED'
        | 'EXEMPT_PRISONER_DRUG_OR_ALCOHOL_DEPENDENCY'
        | 'EXEMPT_PRISONER_OTHER_HEALTH_ISSUES'
        | 'EXEMPT_PRISONER_FAILED_TO_ENGAGE'
        | 'EXEMPT_PRISONER_ESCAPED_OR_ABSCONDED'
        | 'EXEMPT_PRISONER_SAFETY_ISSUES'
        | 'EXEMPT_PRISON_REGIME_CIRCUMSTANCES'
        | 'EXEMPT_PRISON_STAFF_REDEPLOYMENT'
        | 'EXEMPT_PRISON_OPERATION_OR_SECURITY_ISSUE'
        | 'EXEMPT_SECURITY_ISSUE_RISK_TO_STAFF'
        | 'EXEMPT_SYSTEM_TECHNICAL_ISSUE'
        | 'EXEMPT_PRISONER_TRANSFER'
        | 'EXEMPT_PRISONER_RELEASE'
        | 'EXEMPT_PRISONER_DEATH'
        | 'COMPLETED'
      /**
       * @description An optional reason as to why the Review Schedule is exempted.  Only relevant and processed when the `status` field is one of the `EXEMPTION_` statuses.   This field is not mandatory, even when the `status` field is one of the `EXEMPTION_` statuses.
       * @example null
       */
      exemptionReason?: string
    }
    UpdateGoalRequest: {
      /**
       * Format: uuid
       * @description The Goal's unique reference. This is used as an identifier to update the required Goal. It is not possible or supported to update the `goalReference`.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      goalReference: string
      /**
       * @description A title explaining the aim of the goal.
       * @example Improve communication skills
       */
      title: string
      /**
       * Format: date
       * @description An optional ISO-8601 date representing the target completion date of the Goal.
       */
      targetCompletionDate: string
      /**
       * @description A List of at least one Step.
       * @example null
       */
      steps: components['schemas']['UpdateStepRequest'][]
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @description Some additional notes related to the Goal.
       * @example Pay close attention to Peter's behaviour.
       */
      notes?: string
    }
    /**
     * @description A List of at least one Step.
     * @example null
     */
    UpdateStepRequest: {
      /**
       * @example null
       * @enum {string}
       */
      status: 'NOT_STARTED' | 'ACTIVE' | 'COMPLETE'
      /**
       * @description A title describing the step
       * @example Book first aid course
       */
      title: string
      /**
       * Format: int32
       * @description The number (position) of the Step within the overall Goal.
       * @example 1
       */
      sequenceNumber: number
      /**
       * Format: uuid
       * @description Optional reference number for the Step. The Step's unique reference. This is used as an identifier to update the required Step. It is not possible or supported to update the `stepReference` for an existing step. If the Step reference is not supplied this will be treated as a new Step and will be added to the Goal.
       * @example d38a6c41-13d1-1d05-13c2-24619966119b
       */
      stepReference?: string
    }
    UnarchiveGoalRequest: {
      /**
       * Format: uuid
       * @description The Goal's unique reference. This is used as an identifier to unarchive the required Goal.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      goalReference: string
    }
    CompleteGoalRequest: {
      /**
       * Format: uuid
       * @description The Goal's unique reference. This is used as an identifier to complete the required Goal.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      goalReference: string
      /**
       * @description An optional note to accompany the completion
       * @example null
       */
      note?: string
    }
    ArchiveGoalRequest: {
      /**
       * Format: uuid
       * @description The Goal's unique reference. This is used as an identifier to archive the required Goal.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      goalReference: string
      /**
       * @example null
       * @enum {string}
       */
      reason:
        | 'PRISONER_NO_LONGER_WANTS_TO_WORK_TOWARDS_GOAL'
        | 'PRISONER_NO_LONGER_WANTS_TO_WORK_WITH_CIAG'
        | 'SUITABLE_ACTIVITIES_NOT_AVAILABLE_IN_THIS_PRISON'
        | 'OTHER'
      /**
       * @description Describes the reason for archiving if 'OTHER' is selected, it is mandatory in this scenario.
       * @example null
       */
      reasonOther?: string
      /**
       * @description An optional note to accompany the archive
       * @example null
       */
      note?: string
    }
    /**
     * @description A list of achieved qualifications that should be created as part of the education record.
     * @example null
     */
    CreateAchievedQualificationRequest: {
      /**
       * @description The subject of the qualification.
       * @example Maths GCSE
       */
      subject: string
      /**
       * @example null
       * @enum {string}
       */
      level:
        | 'ENTRY_LEVEL'
        | 'LEVEL_1'
        | 'LEVEL_2'
        | 'LEVEL_3'
        | 'LEVEL_4'
        | 'LEVEL_5'
        | 'LEVEL_6'
        | 'LEVEL_7'
        | 'LEVEL_8'
      /**
       * @description The grade which was achieved (if known/relevant).   Note: This is a free format value and there is no type or enum. Therefore values can be "A", "B", "C" etc, but also "1", "2", "3", "Pass", "Distinction", "Merit", "First class honours" etc. It is up to the consumer to interpret this data as necessary.
       * @example Distinction
       */
      grade: string
    }
    CreateEducationRequest: {
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @example null
       * @enum {string}
       */
      educationLevel:
        | 'PRIMARY_SCHOOL'
        | 'SECONDARY_SCHOOL_LEFT_BEFORE_TAKING_EXAMS'
        | 'SECONDARY_SCHOOL_TOOK_EXAMS'
        | 'FURTHER_EDUCATION_COLLEGE'
        | 'UNDERGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'POSTGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'NOT_SURE'
      /**
       * @description A list of achieved qualifications that should be created as part of the education record.
       * @example null
       */
      qualifications: components['schemas']['CreateAchievedQualificationRequest'][]
    }
    /** @example null */
    CreateFutureWorkInterestsRequest: {
      /**
       * @description One or more future work interests that the Prisoner has.
       * @example null
       */
      interests: components['schemas']['FutureWorkInterest'][]
    }
    /** @example null */
    CreateInPrisonInterestsRequest: {
      /**
       * @description A list of in-prison work that the Prisoner is interested in.
       * @example null
       */
      inPrisonWorkInterests: components['schemas']['InPrisonWorkInterest'][]
      /**
       * @description A list of in-prison training that the Prisoner is interested in.
       * @example null
       */
      inPrisonTrainingInterests: components['schemas']['InPrisonTrainingInterest'][]
    }
    CreateInductionRequest: {
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      workOnRelease: components['schemas']['CreateWorkOnReleaseRequest']
      previousQualifications?: components['schemas']['CreatePreviousQualificationsRequest']
      previousTraining?: components['schemas']['CreatePreviousTrainingRequest']
      previousWorkExperiences?: components['schemas']['CreatePreviousWorkExperiencesRequest']
      inPrisonInterests?: components['schemas']['CreateInPrisonInterestsRequest']
      personalSkillsAndInterests?: components['schemas']['CreatePersonalSkillsAndInterestsRequest']
      futureWorkInterests?: components['schemas']['CreateFutureWorkInterestsRequest']
    }
    /** @example null */
    CreatePersonalSkillsAndInterestsRequest: {
      /**
       * @description One or more skills that the Prisoner feels they have.
       * @example null
       */
      skills: components['schemas']['PersonalSkill'][]
      /**
       * @description One or more interests that the Prisoner feels they have.
       * @example null
       */
      interests: components['schemas']['PersonalInterest'][]
    }
    /** @example null */
    CreatePreviousQualificationsRequest: {
      /**
       * @example null
       * @enum {string}
       */
      educationLevel?:
        | 'PRIMARY_SCHOOL'
        | 'SECONDARY_SCHOOL_LEFT_BEFORE_TAKING_EXAMS'
        | 'SECONDARY_SCHOOL_TOOK_EXAMS'
        | 'FURTHER_EDUCATION_COLLEGE'
        | 'UNDERGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'POSTGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'NOT_SURE'
      /**
       * @description A list of the Prisoner's previous qualifications.   These can either be new qualfications without a reference field, or for any qualifications with a reference field they will be treated as updates.
       * @example null
       */
      qualifications?: components['schemas']['CreateOrUpdateAchievedQualificationRequest'][]
    }
    /** @example null */
    CreatePreviousTrainingRequest: {
      /**
       * @description Any additional training that the Prisoner has completed in the past. Must not be empty ('NONE' is an option).
       * @example null
       */
      trainingTypes: (
        | 'CSCS_CARD'
        | 'FIRST_AID_CERTIFICATE'
        | 'FOOD_HYGIENE_CERTIFICATE'
        | 'FULL_UK_DRIVING_LICENCE'
        | 'HEALTH_AND_SAFETY'
        | 'HGV_LICENCE'
        | 'MACHINERY_TICKETS'
        | 'MANUAL_HANDLING'
        | 'TRADE_COURSE'
        | 'OTHER'
        | 'NONE'
      )[]
      /**
       * @description A specific type of training that does not fit the given 'trainingTypes'. Mandatory when 'trainingTypes' includes 'OTHER'.
       * @example null
       */
      trainingTypeOther?: string
    }
    /** @example null */
    CreatePreviousWorkExperiencesRequest: {
      /**
       * @example null
       * @enum {string}
       */
      hasWorkedBefore: 'YES' | 'NO' | 'NOT_RELEVANT'
      /**
       * @description The reason why the whether the prisoner has worked before is not relevant. Mandatory when 'hasWorkedBefore' is 'NOT_RELEVANT'
       * @example Chris has declined to talk about his previous work experience as he is not looking for work on release because he is of retirement age.
       */
      hasWorkedBeforeNotRelevantReason?: string
      /**
       * @description A list of the Prisoner's previous work experiences.
       * @example null
       */
      experiences?: components['schemas']['PreviousWorkExperience'][]
    }
    /** @example null */
    CreateWorkOnReleaseRequest: {
      /**
       * @example null
       * @enum {string}
       */
      hopingToWork: 'YES' | 'NO' | 'NOT_SURE'
      /**
       * @description Factors affecting the Prisoner's ability to work.
       * @example null
       */
      affectAbilityToWork?: (
        | 'LIMITED_BY_OFFENCE'
        | 'CARING_RESPONSIBILITIES'
        | 'NEEDS_WORK_ADJUSTMENTS_DUE_TO_HEALTH'
        | 'UNABLE_TO_WORK_DUE_TO_HEALTH'
        | 'LACKS_CONFIDENCE_OR_MOTIVATION'
        | 'REFUSED_SUPPORT_WITH_NO_REASON'
        | 'RETIRED'
        | 'NO_RIGHT_TO_WORK'
        | 'NOT_SURE'
        | 'OTHER'
        | 'NONE'
      )[]
      /**
       * @description A specific factor affecting the Prisoner's ability to work. This is mandatory when 'affectAbilityToWork' includes 'OTHER'.
       * @example null
       */
      affectAbilityToWorkOther?: string
    }
    CreateConversationRequest: {
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @example null
       * @enum {string}
       */
      type: 'INDUCTION' | 'GENERAL' | 'REVIEW'
      /**
       * @description A note for this conversation
       * @example Pay close attention to Peter's behaviour.
       */
      note: string
    }
    GetCiagInductionSummariesRequest: {
      /**
       * @description A List of prison numbers whose CIAG Inductions should be retrieved.
       * @example null
       */
      offenderIds: string[]
    }
    CiagInductionSummaryListResponse: {
      /**
       * @description A List of prisoners' CIAG Induction summaries. Can be empty but not null.
       * @example null
       */
      ciagProfileList: components['schemas']['CiagInductionSummaryResponse'][]
    }
    /**
     * @description A List of prisoners' CIAG Induction summaries. Can be empty but not null.
     * @example null
     */
    CiagInductionSummaryResponse: {
      /**
       * @description The ID of the Prisoner. AKA the prison number.
       * @example A1234BC
       */
      offenderId: string
      /**
       * @description Whether the Prisoner wishes to work or not.
       * @example false
       */
      desireToWork: boolean
      /**
       * @example null
       * @enum {string}
       */
      hopingToGetWork: 'YES' | 'NO' | 'NOT_SURE'
      /**
       * @description The DPS username of the person who created the Induction.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Induction was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdDateTime: string
      /**
       * @description The DPS username of the person who last updated the Induction.
       * @example asmith_gen
       */
      modifiedBy: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Goal was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      modifiedDateTime: string
    }
    GetActionPlanSummariesRequest: {
      /**
       * @description A List of prison numbers whose Action Plans should be retrieved.
       * @example null
       */
      prisonNumbers: string[]
    }
    ActionPlanSummaryListResponse: {
      /**
       * @description A List of prisoners' Action Plan summaries. Can be empty but not null.
       * @example null
       */
      actionPlanSummaries: components['schemas']['ActionPlanSummaryResponse'][]
    }
    /**
     * @description A List of prisoners' Action Plan summaries. Can be empty but not null.
     * @example null
     */
    ActionPlanSummaryResponse: {
      /**
       * Format: uuid
       * @description The Action Plan's unique reference
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The ID of the prisoner
       * @example A1234BC
       */
      prisonNumber: string
    }
    CreateActionPlanRequest: {
      /**
       * @description A List of at least one Goal.
       * @example null
       */
      goals: components['schemas']['CreateGoalRequest'][]
    }
    /**
     * @description A List of at least one Goal.
     * @example null
     */
    CreateGoalRequest: {
      /**
       * @description A title explaining the aim of the goal.
       * @example Improve communication skills
       */
      title: string
      /**
       * Format: date
       * @description An optional ISO-8601 date representing the target completion date of the Goal.
       */
      targetCompletionDate: string
      /**
       * @description A List of at least one Step.
       * @example null
       */
      steps: components['schemas']['CreateStepRequest'][]
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @description Some additional notes related to the Goal.
       * @example Pay close attention to Peter's behaviour.
       */
      notes?: string
    }
    /**
     * @description A List of at least one Step.
     * @example null
     */
    CreateStepRequest: {
      /**
       * @description A title describing the step
       * @example Book first aid course
       */
      title: string
      /**
       * Format: int32
       * @description The number (position) of the Step within the overall Goal.
       * @example 1
       */
      sequenceNumber: number
    }
    CreateActionPlanReviewRequest: {
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @description The notes taken by the Reviewer when conducting the prisoner's Review.
       * @example Now he has settled into prison life Peter's attitude has improved and he is making excellent progress towards his goals.
       */
      note: string
      /**
       * Format: date
       * @description An ISO-8601 date representing the date that this Review was conducted on.
       */
      conductedAt: string
      /**
       * @description The name of the person who actually conducted the Review session with the Prisoner.   Only populated if the person who conducted the Review was not the person who keyed it into the system.
       * @example Albert Mozzarella
       */
      conductedBy?: string
      /**
       * @description The role of the person who actually conducted the Review session with the Prisoner.  Only populated if the person who conducted the Review was not the person who keyed it into the system.
       * @example Peer mentor
       */
      conductedByRole?: string
    }
    CreateActionPlanReviewResponse: {
      /**
       * @description Indicates whether the Review just submitted was the prisoner's last review before release.
       * @example false
       */
      wasLastReviewBeforeRelease: boolean
      latestReviewSchedule: components['schemas']['ScheduledActionPlanReviewResponse']
    }
    /** @example null */
    ScheduledActionPlanReviewResponse: {
      /**
       * Format: uuid
       * @description The unique reference of this Review
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * Format: date
       * @description An ISO-8601 date representing date that the Review window starts.  A prisoner's Review should be conducted within a given timeframe and this field represents the date that the Review window starts from.
       */
      reviewDateFrom: string
      /**
       * Format: date
       * @description An ISO-8601 date representing date that the Review window ends. This is the Review deadline date.  A prisoner's Review should be conducted within a given timeframe and this field represents the date that the Review window ends, and that the Review should be completed by.
       */
      reviewDateTo: string
      /**
       * @example null
       * @enum {string}
       */
      status:
        | 'SCHEDULED'
        | 'EXEMPT_PRISONER_DRUG_OR_ALCOHOL_DEPENDENCY'
        | 'EXEMPT_PRISONER_OTHER_HEALTH_ISSUES'
        | 'EXEMPT_PRISONER_FAILED_TO_ENGAGE'
        | 'EXEMPT_PRISONER_ESCAPED_OR_ABSCONDED'
        | 'EXEMPT_PRISONER_SAFETY_ISSUES'
        | 'EXEMPT_PRISON_REGIME_CIRCUMSTANCES'
        | 'EXEMPT_PRISON_STAFF_REDEPLOYMENT'
        | 'EXEMPT_PRISON_OPERATION_OR_SECURITY_ISSUE'
        | 'EXEMPT_SECURITY_ISSUE_RISK_TO_STAFF'
        | 'EXEMPT_SYSTEM_TECHNICAL_ISSUE'
        | 'EXEMPT_PRISONER_TRANSFER'
        | 'EXEMPT_PRISONER_RELEASE'
        | 'EXEMPT_PRISONER_DEATH'
        | 'COMPLETED'
      /**
       * @example null
       * @enum {string}
       */
      calculationRule:
        | 'PRISONER_READMISSION'
        | 'PRISONER_TRANSFER'
        | 'BETWEEN_RELEASE_AND_3_MONTHS_TO_SERVE'
        | 'BETWEEN_3_MONTHS_AND_3_MONTHS_7_DAYS_TO_SERVE'
        | 'BETWEEN_3_MONTHS_8_DAYS_AND_6_MONTHS_TO_SERVE'
        | 'BETWEEN_6_AND_12_MONTHS_TO_SERVE'
        | 'BETWEEN_12_AND_60_MONTHS_TO_SERVE'
        | 'MORE_THAN_60_MONTHS_TO_SERVE'
        | 'INDETERMINATE_SENTENCE'
        | 'PRISONER_ON_REMAND'
        | 'PRISONER_UN_SENTENCED'
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
      /**
       * @description An optional reason as to why the Review Schedule is exempted.  Only present when the `status` field is one of the `EXEMPTION_` statuses and the user entered an exemption  reason when marking the Review as Exempted.
       * @example null
       */
      exemptionReason?: string
      /**
       * Format: int32
       * @description the version number of this schedule (the highest number is the most recent version of this review schedule)
       */
      version?: number
    }
    CreateGoalsRequest: {
      /**
       * @description A List of at least one Goal.
       * @example null
       */
      goals: components['schemas']['CreateGoalRequest'][]
    }
    /**
     * @description A List of at least one TimelineEventResponse.
     * @example null
     */
    TimelineEventResponse: {
      /**
       * Format: uuid
       * @description The Timeline event's unique reference
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * @description A reference to the originating entity that was created, or updated during this event, such as a Prisoner's Goal or Induction. Typically this will be a UUID, but does not have to be.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      sourceReference: string
      /**
       * @example null
       * @enum {string}
       */
      eventType:
        | 'INDUCTION_CREATED'
        | 'INDUCTION_UPDATED'
        | 'INDUCTION_SCHEDULE_CREATED'
        | 'INDUCTION_SCHEDULE_UPDATED'
        | 'ACTION_PLAN_CREATED'
        | 'GOAL_CREATED'
        | 'GOAL_UPDATED'
        | 'GOAL_COMPLETED'
        | 'GOAL_ARCHIVED'
        | 'GOAL_UNARCHIVED'
        | 'STEP_UPDATED'
        | 'STEP_NOT_STARTED'
        | 'STEP_STARTED'
        | 'STEP_COMPLETED'
        | 'ACTION_PLAN_REVIEW_COMPLETED'
        | 'ACTION_PLAN_REVIEW_SCHEDULE_STATUS_UPDATED'
        | 'CONVERSATION_CREATED'
        | 'CONVERSATION_UPDATED'
        | 'PRISON_ADMISSION'
        | 'PRISON_RELEASE'
        | 'PRISON_TRANSFER'
      /**
       * @description An object containing properties of contextual information that's relevant to the event in question. For example a property called `GOAL_TITLE` with value being the title of a Goal that was completed. The object may contain any number of properties. The API spec does not define the property names, but there is a defined set as part of the domain: - GOAL_TITLE - STEP_TITLE - PRISON_TRANSFERRED_FROM
       * @example {
       *       "GOAL_TITLE": "Learn French"
       *     }
       */
      contextualInfo: {
        [key: string]: string
      }
      /**
       * @description The Prison identifier.
       * @example BXI
       */
      prisonId: string
      /**
       * @description The username of the person who caused this event. Set to 'system' if the event was not actioned by a DPS user.
       * @example asmith_gen
       */
      actionedBy: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the event occurred.
       * @example 2023-06-19T09:39:44Z
       */
      timestamp: string
      /**
       * Format: uuid
       * @description A correlationId for this and any other TimelineEvents that occurred at the same time (i.e. within same atomic action). For example, this could be an update to a Goal, plus one or more of its child Steps. If required, this allows a client to easily group the events together.
       * @example 113d1833-0ce1-45ad-ab44-878c9d589358
       */
      correlationId: string
      /**
       * @description The display name of the person who caused this event, if applicable.
       * @example Alex Smith
       */
      actionedByDisplayName?: string
    }
    TimelineResponse: {
      /**
       * Format: uuid
       * @description The Timeline's unique reference.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * @description The ID of the prisoner.
       * @example A1234BC
       */
      prisonNumber: string
      /**
       * @description A List of at least one TimelineEventResponse.
       * @example null
       */
      events: components['schemas']['TimelineEventResponse'][]
    }
    HmppsSubjectAccessRequestContent: {
      /** @description The content of the subject access request response */
      content: Record<string, never>
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    DlqMessage: {
      body: {
        [key: string]: Record<string, never>
      }
      messageId: string
    }
    GetDlqResult: {
      /** Format: int32 */
      messagesFoundCount: number
      /** Format: int32 */
      messagesReturnedCount: number
      messages: components['schemas']['DlqMessage'][]
    }
    /**
     * @description A list of achieved qualifications. Can be empty but not null.
     * @example null
     */
    AchievedQualificationResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this Achieved Qualification.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The subject of the qualification.
       * @example Maths GCSE
       */
      subject: string
      /**
       * @example null
       * @enum {string}
       */
      level:
        | 'ENTRY_LEVEL'
        | 'LEVEL_1'
        | 'LEVEL_2'
        | 'LEVEL_3'
        | 'LEVEL_4'
        | 'LEVEL_5'
        | 'LEVEL_6'
        | 'LEVEL_7'
        | 'LEVEL_8'
      /**
       * @description The grade which was achieved (if known/relevant).   Note: This is a free format value and there is no type or enum. Therefore values can be "A", "B", "C" etc, but also "1", "2", "3", "Pass", "Distinction", "Merit", "First class honours" etc. It is up to the consumer to interpret this data as necessary.
       * @example Distinction
       */
      grade: string
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    EducationResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this EducationResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @example null
       * @enum {string}
       */
      educationLevel:
        | 'PRIMARY_SCHOOL'
        | 'SECONDARY_SCHOOL_LEFT_BEFORE_TAKING_EXAMS'
        | 'SECONDARY_SCHOOL_TOOK_EXAMS'
        | 'FURTHER_EDUCATION_COLLEGE'
        | 'UNDERGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'POSTGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'NOT_SURE'
      /**
       * @description A list of achieved qualifications. Can be empty but not null.
       * @example null
       */
      qualifications: components['schemas']['AchievedQualificationResponse'][]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    /** @example null */
    FutureWorkInterestsResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this FutureWorkInterestsResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description One or more future work interests that the Prisoner has.
       * @example null
       */
      interests: components['schemas']['FutureWorkInterest'][]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    /** @example null */
    InPrisonInterestsResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this InPrisonInterestsResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description A list of in-prison work that the Prisoner is interested in.
       * @example null
       */
      inPrisonWorkInterests: components['schemas']['InPrisonWorkInterest'][]
      /**
       * @description A list of in-prison training that the Prisoner is interested in.
       * @example null
       */
      inPrisonTrainingInterests: components['schemas']['InPrisonTrainingInterest'][]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    InductionResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this Induction.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The ID of the prisoner
       * @example A1234BC
       */
      prisonNumber: string
      workOnRelease: components['schemas']['WorkOnReleaseResponse']
      /**
       * @description The DPS username of the person who created the Induction.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created the Induction.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Induction was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when the Induction was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated the Induction.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated the Induction.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Induction was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when the Induction was updated.
       * @example BXI
       */
      updatedAtPrison: string
      previousQualifications?: components['schemas']['PreviousQualificationsResponse']
      previousTraining?: components['schemas']['PreviousTrainingResponse']
      previousWorkExperiences?: components['schemas']['PreviousWorkExperiencesResponse']
      inPrisonInterests?: components['schemas']['InPrisonInterestsResponse']
      personalSkillsAndInterests?: components['schemas']['PersonalSkillsAndInterestsResponse']
      futureWorkInterests?: components['schemas']['FutureWorkInterestsResponse']
    }
    /** @example null */
    PersonalSkillsAndInterestsResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this PersonalSkillsAndInterestsResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description One or more skills that the Prisoner feels they have.
       * @example null
       */
      skills: components['schemas']['PersonalSkill'][]
      /**
       * @description One or more interests that the Prisoner feels they have.
       * @example null
       */
      interests: components['schemas']['PersonalInterest'][]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    /** @example null */
    PreviousQualificationsResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this PreviousQualificationsResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @example null
       * @enum {string}
       */
      educationLevel:
        | 'PRIMARY_SCHOOL'
        | 'SECONDARY_SCHOOL_LEFT_BEFORE_TAKING_EXAMS'
        | 'SECONDARY_SCHOOL_TOOK_EXAMS'
        | 'FURTHER_EDUCATION_COLLEGE'
        | 'UNDERGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'POSTGRADUATE_DEGREE_AT_UNIVERSITY'
        | 'NOT_SURE'
      /**
       * @description A list of the Prisoner's previous qualifications. Can be empty but not null.
       * @example null
       */
      qualifications: components['schemas']['AchievedQualificationResponse'][]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    /** @example null */
    PreviousTrainingResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this PreviousTrainingResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description Any additional training that the Prisoner has completed in the past. Can be empty, but never null.
       * @example null
       */
      trainingTypes: (
        | 'CSCS_CARD'
        | 'FIRST_AID_CERTIFICATE'
        | 'FOOD_HYGIENE_CERTIFICATE'
        | 'FULL_UK_DRIVING_LICENCE'
        | 'HEALTH_AND_SAFETY'
        | 'HGV_LICENCE'
        | 'MACHINERY_TICKETS'
        | 'MANUAL_HANDLING'
        | 'TRADE_COURSE'
        | 'OTHER'
        | 'NONE'
      )[]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
      /**
       * @description A specific type of training that does not fit the given 'trainingTypes'. Mandatory when 'trainingTypes' includes 'OTHER'.
       * @example null
       */
      trainingTypeOther?: string
    }
    /** @example null */
    PreviousWorkExperiencesResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this PreviousWorkExperiencesResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @example null
       * @enum {string}
       */
      hasWorkedBefore: 'YES' | 'NO' | 'NOT_RELEVANT'
      /**
       * @description A list of the Prisoner's previous work experiences.
       * @example null
       */
      experiences: components['schemas']['PreviousWorkExperience'][]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
      /**
       * @description The reason why the whether the prisoner has worked before is not relevant. Only populated when 'hasWorkedBefore' is 'NOT_RELEVANT'.
       * @example Chris has declined to talk about his previous work experience as he is not looking for work on release because he is of retirement age.
       */
      hasWorkedBeforeNotRelevantReason?: string
    }
    /** @example null */
    WorkOnReleaseResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this WorkOnReleaseResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @example null
       * @enum {string}
       */
      hopingToWork: 'YES' | 'NO' | 'NOT_SURE'
      /**
       * @description Factors affecting the Prisoner's ability to work. Can be empty but not null.
       * @example null
       */
      affectAbilityToWork: (
        | 'LIMITED_BY_OFFENCE'
        | 'CARING_RESPONSIBILITIES'
        | 'NEEDS_WORK_ADJUSTMENTS_DUE_TO_HEALTH'
        | 'UNABLE_TO_WORK_DUE_TO_HEALTH'
        | 'LACKS_CONFIDENCE_OR_MOTIVATION'
        | 'REFUSED_SUPPORT_WITH_NO_REASON'
        | 'RETIRED'
        | 'NO_RIGHT_TO_WORK'
        | 'NOT_SURE'
        | 'OTHER'
        | 'NONE'
      )[]
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
      /**
       * @description A specific factor affecting the Prisoner's ability to work. This is mandatory when 'affectAbilityToWork' includes 'OTHER'.
       * @example null
       */
      affectAbilityToWorkOther?: string
    }
    InductionScheduleResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this InductionScheduleResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The ID of the prisoner
       * @example A1234BC
       */
      prisonNumber: string
      /**
       * Format: date
       * @description The deadline for the induction to be completed
       */
      deadlineDate: string
      /**
       * @example null
       * @enum {string}
       */
      scheduleCalculationRule:
        | 'NEW_PRISON_ADMISSION'
        | 'EXISTING_PRISONER_LESS_THAN_6_MONTHS_TO_SERVE'
        | 'EXISTING_PRISONER_BETWEEN_6_AND_12_MONTHS_TO_SERVE'
        | 'EXISTING_PRISONER_BETWEEN_12_AND_60_MONTHS_TO_SERVE'
        | 'EXISTING_PRISONER_INDETERMINATE_SENTENCE'
        | 'EXISTING_PRISONER_ON_REMAND'
        | 'EXISTING_PRISONER_UN_SENTENCED'
      /**
       * @example null
       * @enum {string}
       */
      scheduleStatus:
        | 'SCHEDULED'
        | 'COMPLETE'
        | 'EXEMPT_PRISONER_DRUG_OR_ALCOHOL_DEPENDENCY'
        | 'EXEMPT_PRISONER_OTHER_HEALTH_ISSUES'
        | 'EXEMPT_PRISONER_FAILED_TO_ENGAGE'
        | 'EXEMPT_PRISONER_ESCAPED_OR_ABSCONDED'
        | 'EXEMPT_PRISONER_SAFETY_ISSUES'
        | 'EXEMPT_PRISON_REGIME_CIRCUMSTANCES'
        | 'EXEMPT_PRISON_STAFF_REDEPLOYMENT'
        | 'EXEMPT_PRISON_OPERATION_OR_SECURITY_ISSUE'
        | 'EXEMPT_SECURITY_ISSUE_RISK_TO_STAFF'
        | 'EXEMPT_SYSTEM_TECHNICAL_ISSUE'
        | 'EXEMPT_PRISONER_TRANSFER'
        | 'EXEMPT_PRISONER_RELEASE'
        | 'EXEMPT_PRISONER_DEATH'
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The name of the person who completed the review.
       * @example John smith
       */
      inductionPerformedBy?: string
      /**
       * Format: date
       * @description the date when this resource was updated.
       */
      inductionPerformedAt?: string
    }
    /** @example null */
    ConversationResponse: {
      /**
       * Format: uuid
       * @description A unique reference for this ConversationResponse.
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The ID of the prisoner
       * @example A1234BC
       */
      prisonNumber: string
      /**
       * @description A note for this conversation
       * @example Pay close attention to Peter's behaviour.
       */
      note: string
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    ConversationsResponse: {
      /** Format: int32 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
      /** Format: int32 */
      pageNumber: number
      /** Format: int32 */
      pageSize: number
      /** @example null */
      content: components['schemas']['ConversationResponse'][]
    }
    ActionPlanResponse: {
      /**
       * Format: uuid
       * @description The Action Plan's unique reference
       * @example 814ade0a-a3b2-46a3-862f-79211ba13f7b
       */
      reference: string
      /**
       * @description The ID of the prisoner
       * @example A1234BC
       */
      prisonNumber: string
      /**
       * @description A List of at least one or more Goals.
       * @example null
       */
      goals: components['schemas']['GoalResponse'][]
    }
    /**
     * @description A List of at least one or more Goals.
     * @example null
     */
    GoalResponse: {
      /**
       * Format: uuid
       * @description The Goal's unique reference
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      goalReference: string
      /**
       * @description A title explaining the aim of the goal.
       * @example Improve communication skills
       */
      title: string
      /**
       * Format: date
       * @description An optional ISO-8601 date representing the target completion date of the Goal.
       */
      targetCompletionDate: string
      /**
       * @example null
       * @enum {string}
       */
      status: 'ACTIVE' | 'COMPLETED' | 'ARCHIVED'
      /**
       * @description A List of at least one Step.
       * @example null
       */
      steps: components['schemas']['StepResponse'][]
      /**
       * @description The DPS username of the person who created the goal.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created the goal.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Goal was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when the Goal was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated the goal.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated the goal.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Goal was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when the Goal was updated.
       * @example BXI
       */
      updatedAtPrison: string
      /**
       * @description A List of at Notes associated with the Goal. Will be an empty array if the goal has no Notes
       * @example null
       */
      goalNotes: components['schemas']['NoteResponse'][]
      /**
       * @description Some additional notes related to the Goal. This is deprecated - use the`goalNotes` list instead
       * @example Pay close attention to Peter's behaviour.
       */
      notes?: string
      /**
       * @example null
       * @enum {string}
       */
      archiveReason?:
        | 'PRISONER_NO_LONGER_WANTS_TO_WORK_TOWARDS_GOAL'
        | 'PRISONER_NO_LONGER_WANTS_TO_WORK_WITH_CIAG'
        | 'SUITABLE_ACTIVITIES_NOT_AVAILABLE_IN_THIS_PRISON'
        | 'OTHER'
      /**
       * @description Describes the reason for archiving if 'OTHER' is selected, it is mandatory in this scenario.
       * @example null
       */
      archiveReasonOther?: string
    }
    /**
     * @description A List of at Notes associated with the Goal. Will be an empty array if the goal has no Notes
     * @example null
     */
    NoteResponse: {
      /**
       * Format: uuid
       * @description The Notes unique reference. This is used as an identifier to archive the required Note.
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /** @example Peter would like to work in the library to help with his English levels. */
      content: string
      /**
       * @example null
       * @enum {string}
       */
      type: 'GOAL' | 'GOAL_ARCHIVAL' | 'GOAL_COMPLETION' | 'REVIEW' | 'INDUCTION'
      /**
       * @description The DPS username of the person who created this resource.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who created this resource.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was created.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was created.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The DPS username of the person who last updated this resource.
       * @example asmith_gen
       */
      updatedBy: string
      /**
       * @description The display name of the person who last updated this resource.
       * @example Alex Smith
       */
      updatedByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when this resource was last updated. This will be the same as the created date if it has not yet been updated.
       * @example 2023-06-19T09:39:44Z
       */
      updatedAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when this resource was updated.
       * @example BXI
       */
      updatedAtPrison: string
    }
    /**
     * @description A List of at least one Step.
     * @example null
     */
    StepResponse: {
      /**
       * Format: uuid
       * @description A unique reference for the Step
       * @example d38a6c41-13d1-1d05-13c2-24619966119b
       */
      stepReference: string
      /**
       * @description A title describing the step
       * @example Book communication skills course
       */
      title: string
      /**
       * @example null
       * @enum {string}
       */
      status: 'NOT_STARTED' | 'ACTIVE' | 'COMPLETE'
      /**
       * Format: int32
       * @description The number (position) of the Step within the overall Goal.
       * @example 1
       */
      sequenceNumber: number
    }
    ActionPlanReviewsResponse: {
      latestReviewSchedule: components['schemas']['ScheduledActionPlanReviewResponse']
      /**
       * @description A List containing zero or more CompletedReviews.
       * @example null
       */
      completedReviews: components['schemas']['CompletedActionPlanReviewResponse'][]
    }
    /**
     * @description A List containing zero or more CompletedReviews.
     * @example null
     */
    CompletedActionPlanReviewResponse: {
      /**
       * Format: uuid
       * @description The unique reference of this Review
       * @example c88a6c48-97e2-4c04-93b5-98619966447b
       */
      reference: string
      /**
       * Format: date
       * @description An ISO-8601 date representing the deadline for this Review to have been completed by.
       */
      deadlineDate: string
      /**
       * Format: date
       * @description An ISO-8601 date representing the date that this Review was completed on.  Clients can infer whether this Review was completed on time or not by comparing the deadlineDate and completedDate.
       */
      completedDate: string
      note: components['schemas']['NoteResponse']
      /**
       * @description The DPS username of the person who entered the Review in the system.
       * @example asmith_gen
       */
      createdBy: string
      /**
       * @description The display name of the person who entered the Review in the system.
       * @example Alex Smith
       */
      createdByDisplayName: string
      /**
       * Format: date-time
       * @description An ISO-8601 timestamp representing when the Review was entered in the system.
       * @example 2023-06-19T09:39:44Z
       */
      createdAt: string
      /**
       * @description The identifier of the prison that the prisoner was resident at when the Review was ented in the system.
       * @example BXI
       */
      createdAtPrison: string
      /**
       * @description The name of the person who actually conducted the Review session with the Prisoner.   Only populated if the person who conducted the Review was not the person who keyed it into the system.
       * @example Albert Mozzarella
       */
      conductedBy?: string
      /**
       * @description The role of the person who actually conducted the Review session with the Prisoner.  Only populated if the person who conducted the Review was not the person who keyed it into the system.
       * @example Peer mentor
       */
      conductedByRole?: string
    }
    ActionPlanReviewSchedulesResponse: {
      /**
       * @description A List containing zero or more ReviewSchedules.
       * @example null
       */
      reviewSchedules: components['schemas']['ScheduledActionPlanReviewResponse'][]
    }
    GetGoalsResponse: {
      /**
       * @description A List containing zero or more Goals.
       * @example null
       */
      goals: components['schemas']['GoalResponse'][]
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  retryDlq: {
    parameters: {
      query?: never
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult']
        }
      }
    }
  }
  retryAllDlqs: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['RetryDlqResult'][]
        }
      }
    }
  }
  purgeQueue: {
    parameters: {
      query?: never
      header?: never
      path: {
        queueName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['PurgeQueueResult']
        }
      }
    }
  }
  getEduction: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['EducationResponse']
        }
      }
    }
  }
  updateEducation: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateEducationRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  createEducation: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateEducationRequest']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getInduction: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InductionResponse']
        }
      }
    }
  }
  updateInduction: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateInductionRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  createInduction: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateInductionRequest']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getConversation: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
        conversationReference: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ConversationResponse']
        }
      }
    }
  }
  updateConversation: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
        conversationReference: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateConversationRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Conversation']
        }
      }
    }
  }
  updateLatestReviewScheduleStatus: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateReviewScheduleStatusRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getPrisonerGoal: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
        goalReference: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GoalResponse']
        }
      }
    }
  }
  updateGoal: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
        goalReference: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateGoalRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  unarchiveGoal: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
        goalReference: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UnarchiveGoalRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  completeGoal: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
        goalReference: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CompleteGoalRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  archiveGoal: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
        goalReference: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ArchiveGoalRequest']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getConversations: {
    parameters: {
      query?: {
        page?: number
        pageSize?: number
      }
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ConversationsResponse']
        }
      }
    }
  }
  createConversation: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateConversationRequest']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getInductionSummaries: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['GetCiagInductionSummariesRequest']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CiagInductionSummaryListResponse']
        }
      }
    }
  }
  getActionPlanSummaries: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['GetActionPlanSummariesRequest']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ActionPlanSummaryListResponse']
        }
      }
    }
  }
  getActionPlan: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ActionPlanResponse']
        }
      }
    }
  }
  createActionPlan: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateActionPlanRequest']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getActionPlanReviews: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ActionPlanReviewsResponse']
        }
      }
    }
  }
  createActionPlanReview: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateActionPlanReviewRequest']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['CreateActionPlanReviewResponse']
        }
      }
    }
  }
  getGoals: {
    parameters: {
      query?: {
        status?: ('ACTIVE' | 'COMPLETED' | 'ARCHIVED')[]
      }
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetGoalsResponse']
        }
      }
    }
  }
  createGoals: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateGoalsRequest']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getTimeline: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['TimelineResponse']
        }
      }
    }
  }
  getSarContentByReference: {
    parameters: {
      query?: {
        /** @description NOMIS Prison Reference Number */
        prn?: string
        /** @description nDelius Case Reference Number */
        crn?: string
        /** @description Optional parameter denoting minimum date of event occurrence which should be returned in the response */
        fromDate?: string
        /** @description Optional parameter denoting maximum date of event occurrence which should be returned in the response */
        toDate?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Request successfully processed - content found */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['HmppsSubjectAccessRequestContent']
        }
      }
      /** @description Request successfully processed - no content found */
      204: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description Subject Identifier is not recognised by this service */
      209: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
      /** @description The client does not have authorisation to make this request */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unexpected error occurred */
      500: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getDlqMessages: {
    parameters: {
      query?: {
        maxMessages?: number
      }
      header?: never
      path: {
        dlqName: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['GetDlqResult']
        }
      }
    }
  }
  getInductionSchedule: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['InductionScheduleResponse']
        }
      }
    }
  }
  getActionPlanReviewSchedules: {
    parameters: {
      query?: never
      header?: never
      path: {
        prisonNumber: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ActionPlanReviewSchedulesResponse']
        }
      }
    }
  }
}

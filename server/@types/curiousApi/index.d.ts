/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/sequation-virtual-campus2-api/employers': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Returns created employer details on sucessful creation */
    post: operations['createEmployerUsingPOST']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/employers/{empId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** Returns deleted employer data for the given employer Id  */
    delete: operations['deleteEmployerUsingDELETE']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/employers/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Returns updated employer details on sucessful updation */
    put: operations['updateEmployerUsingPUT']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/ping': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** returns pong if API is up */
    get: operations['getHealthUsingGET']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/jobs-prison-leavers': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Create job for prison leaver */
    post: operations['createJobsPrisonLeaversUsingPOST']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/jobs-prison-leavers/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    /** Update job for prison leaver */
    put: operations['updateJobsPrisonLeaversUsingPUT']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/jobs-prison-leavers/{jobId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** deletes job for prison leaver */
    delete: operations['deleteJobsPrisonLeaversUsingDELETE']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/latestLearnerAssessments/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns the most recent assessment of each type for a given learner */
    get: operations['getLearnerLatestAssessmentsUsingGET']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/learnerAssessments/v2/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns the most recent assessment of each type for a given learner for v1 and all completed assessments for v2 */
    get: operations['getLearnerAssessmentsUsingGET']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/learnerProfile/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns all learner data for the given PRN from and eventually from all establishments the learner has been resident in */
    get: operations['getLearnerEducationUsingGET']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/learnerEducation/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns all courses the learner has been enrolled. This is going to contain all course entries, with no filtering on the course enrolment status, in order to provide a holistic view of the learner educational journey */
    get: operations['getLearnerEducationUsingGET_1']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/learnerEmployabilitySkills/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns all employability skills associated with given learner. */
    get: operations['getEmployabilitySkillsUsingGET']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/learnerGoals/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns all learner Goals for the given PRN */
    get: operations['getLearnerGoalsUsingGET']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/learnerNeurodivergence/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns all learner Neurodivergence info */
    get: operations['getLearnerNeurodivergenceUsingGET']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/sequation-virtual-campus2-api/learnerQualifications/v2/{prn}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Returns all qualifications the learner has been enrolled. This is going to contain all course entries, with no filtering on the course enrolment status, in order to provide a holistic view of the learner educational journey */
    get: operations['getLearnerEducationUsingGET_2']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** AllAssessmentDTO */
    AllAssessmentDTO: {
      v1?: components['schemas']['LearnerLatestAssessmentV1DTO'][]
      v2?: components['schemas']['LearnerAssessmentV2DTO']
    }
    /** AllQualificationsDTO */
    AllQualificationsDTO: {
      v1?: components['schemas']['LearnerEducationDTO'][]
      v2?: components['schemas']['LearnerQualificationsDTO'][]
    }
    /** AssessmentDTO */
    AssessmentDTO: {
      /**
       * Format: date
       * @description The date the assessment has been taken
       */
      assessmentDate?: string
      /**
       * @description Assessment Grade
       * @example Level 1
       */
      qualificationGrade?: string
      /**
       * @description Assessment Type
       * @example English
       * @enum {string}
       */
      qualificationType?: 'English, Maths, Digital Literacy'
    }
    /** AssessmentV1DTO */
    AssessmentV1DTO: {
      /**
       * Format: date
       * @description The date the assessment has been taken
       */
      assessmentDate?: string
      /**
       * @description Assessment Grade
       * @example Level 1
       */
      qualificationGrade?: string
      /**
       * @description Assessment Type
       * @example English
       * @enum {string}
       */
      qualificationType?: 'English, Maths, Digital Literacy'
    }
    /** EmployabilitySkillsPage */
    EmployabilitySkillsPage: {
      content?: components['schemas']['LearnerEmployabilitySkillsDTO'][]
      empty?: boolean
      first?: boolean
      last?: boolean
      /** Format: int32 */
      number?: number
      /** Format: int32 */
      numberOfElements?: number
      pageable?: components['schemas']['Pageable']
      /** Format: int32 */
      size?: number
      sort?: components['schemas']['Sort']
      /** Format: int32 */
      totalElements?: number
      /** Format: int32 */
      totalPages?: number
    }
    /** EmployabilitySkillsReviewDTO */
    EmployabilitySkillsReviewDTO: {
      /** @description Any comments on the review */
      comment?: string
      /** @description Employability Skill progression status and score on a scale of 1 to 5 (1 - Not demonstrated, 5 - Outstanding demonstration) */
      currentProgression?: string
      /**
       * Format: date
       * @description Date when the employability skill was reviewed
       */
      reviewDate?: string
    }
    /** EmployerDTO */
    EmployerDTO: {
      /**
       * @description Employer bio
       * @example description of employer
       */
      employerBio?: string
      /**
       * @description Employer Name
       * @example Meganexus
       */
      employerName?: string
      /**
       * @description mandatory if partner status is Key Partner
       * @example Amazon.png
       */
      imgName?: string
      /**
       * Format: int64
       * @description Partner reference data id
       * @example 1
       */
      partnerId?: number
      /**
       * @description mandatory if partner status is Key Partner
       * @example /images-employer/original/Amazon.png
       */
      path?: string
      /**
       * Format: int64
       * @description sector reference data id
       * @example 2
       */
      sectorId?: number
    }
    /** ExcludingOffencesDTO */
    ExcludingOffencesDTO: {
      /**
       * @description Excluding offences reference data id
       * @example 1
       */
      choiceIds?: number[]
      /**
       * @description Mandatory on Other excluding offence
       * @example Other value
       */
      other?: string
    }
    /** ExternalAssessmentsDTO */
    ExternalAssessmentsDTO: {
      aln?: components['schemas']['LearnerAssessmentsAlnDTO'][]
      digitalSkillsFunctionalSkills?: components['schemas']['LearnerAssessmentsFunctionalSkillsDTO'][]
      englishFunctionalSkills?: components['schemas']['LearnerAssessmentsFunctionalSkillsDTO'][]
      esol?: components['schemas']['LearnerAssessmentsDTO'][]
      mathsFunctionalSkills?: components['schemas']['LearnerAssessmentsFunctionalSkillsDTO'][]
      reading?: components['schemas']['LearnerAssessmentsDTO'][]
    }
    /** JobsPrisonLeaversDTO */
    JobsPrisonLeaversDTO: {
      /**
       * @description Additional salary information
       * @example Description about salary information
       */
      additionalSalaryInformation?: string
      /**
       * Format: int64
       * @description Base location reference id
       */
      baseLocationId?: number
      /**
       * Format: int64
       * @description Charity reference data id
       * @example 1
       */
      charityId?: number
      /**
       * Format: date
       * @description Closing date
       * @example 2024-09-30T00:00:00.000+00:00
       */
      closingDate?: string
      /**
       * Format: int64
       * @description Contract type reference data id
       * @example 1
       */
      contractTypeId?: number
      /**
       * @description Desireable job criteria
       * @example Description about desireable job criteria
       */
      desireableJobCriteria?: string
      /**
       * Format: int64
       * @description Employer reference data id
       * @example 1
       */
      employerId?: number
      /**
       * Format: int64
       * @description Job sector reference data id
       * @example 1
       */
      employerSectorId?: number
      /**
       * @description Essential job criteria
       * @example Description about essential job criteria
       */
      essentialJobCriteria?: string
      excludingOffences?: components['schemas']['ExcludingOffencesDTO']
      /**
       * Format: int64
       * @description Hours reference data id
       * @example 1
       */
      hoursId?: number
      /**
       * @description How to apply
       * @example Description about how to apply
       */
      howToApply?: string
      /**
       * @description Job Description
       * @example Detail description of role
       */
      jobDescription?: string
      /**
       * Format: int64
       * @description Job source reference data id
       * @example 1
       */
      jobSourceOneId?: number
      /** @description List of job source reference data ids */
      jobSourceTwoList?: number[]
      /**
       * @description Job title
       * @example Software Engineer
       */
      jobTitle?: string
      /** Format: int64 */
      jobTypeId: number
      /**
       * @description National minimum wage is boolean value true or false
       * @example true
       */
      nationalMinimumWage?: boolean
      /**
       * @description Mandatory if rolling opportunity is 0
       * @example SW1A 1AA
       */
      postcode?: string
      /**
       * Format: date
       * @description Start date
       * @example 2024-08-30T00:00:00.000+00:00
       */
      postingDate?: string
      /**
       * @description ringfencedJob is boolean value true or false and mandatory if rolling opportunity is false
       * @example true
       */
      ringfencedJob?: boolean
      /**
       * @description Rolling opportunity boolean value true or false
       * @example true
       */
      rollingOpportunity?: boolean
      /**
       * @description Salary from
       * @example 30
       */
      salaryFrom?: string
      /**
       * Format: int64
       * @description Salary period data id
       * @example 2
       */
      salaryPeriodId?: number
      /**
       * @description Salary to
       * @example 20
       */
      salaryTo?: string
      /**
       * Format: int64
       * @description Work pattern reference data id
       * @example 1
       */
      workPatternId?: number
    }
    /** LearnerAssessmentDTO */
    LearnerAssessmentDTO: {
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      qualification?: components['schemas']['AssessmentDTO']
    }
    /** LearnerAssessmentV1DTO */
    LearnerAssessmentV1DTO: {
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      qualification?: components['schemas']['AssessmentV1DTO']
    }
    /** LearnerAssessmentV2DTO */
    LearnerAssessmentV2DTO: {
      assessments?: components['schemas']['ExternalAssessmentsDTO']
      /**
       * @description NOMIS Assigned Offender Number (Prisoner Identifier)
       * @example A1234AA
       */
      prn?: string
    }
    /** LearnerAssessmentsAlnDTO */
    LearnerAssessmentsAlnDTO: {
      /**
       * Format: date
       * @description The date the assessment has been taken
       */
      assessmentDate?: string
      /** @description Assessment Outcome Value */
      assessmentOutcome?: string
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      /** @description Has Prisoner Consent Value */
      hasPrisonerConsent?: string
      /** @description Stakeholder Referral Value */
      stakeholderReferral?: string
    }
    /** LearnerAssessmentsDTO */
    LearnerAssessmentsDTO: {
      /**
       * Format: date
       * @description The date the assessment has been taken
       */
      assessmentDate?: string
      /** @description Assessment Next Step Value */
      assessmentNextStep?: string
      /** @description Assessment Outcome Value */
      assessmentOutcome?: string
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      /** @description Has Prisoner Consent Value */
      hasPrisonerConsent?: string
      /** @description Stakeholder Referral Value */
      stakeholderReferral?: string
    }
    /** LearnerAssessmentsFunctionalSkillsDTO */
    LearnerAssessmentsFunctionalSkillsDTO: {
      /**
       * Format: date
       * @description The date the assessment has been taken
       */
      assessmentDate?: string
      /** @description Assessment Next Step Value */
      assessmentNextStep?: string
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      /** @description Has Prisoner Consent Value */
      hasPrisonerConsent?: string
      /** @description Assessment Level Branding Value */
      levelBranding?: string
      /** @description Stakeholder Referral Value */
      stakeholderReferral?: string
      /** @description Assessment Working Towards Level Value */
      workingTowardsLevel?: string
    }
    /** LearnerEducationDTO */
    LearnerEducationDTO: {
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      a2LevelIndicator?: boolean
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      accessHEIndicator?: boolean
      /**
       * Format: int32
       * @description Actual Guided Learning Hours allocated to course
       */
      actualGLH?: number
      /**
       * Format: int32
       * @description The sequence number of Course for a learner
       */
      aimSequenceNumber?: number
      alevelIndicator?: boolean
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      asLevelIndicator?: boolean
      /**
       * Format: int32
       * @description Actual attended Guided Learning Hours by learner on course
       */
      attendedGLH?: number
      /**
       * @description Course completion Status
       * @example Continuing, Completed, Withdrawn, Temporarily withdrawn
       */
      completionStatus?: string
      /** @description Unique Course Code */
      courseCode?: string
      /** @description Course Name */
      courseName?: string
      /** @description Post code of a location where this course is getting delivered */
      deliveryLocationPostCode?: string
      /**
       * @description Course Delivery Method
       * @enum {string}
       */
      deliveryMethodType?: 'Blended Learning, Classroom Only Learning, Pack Only Learning'
      /** @description Employment Outcome gained status associated with the course (with training, without training) */
      employmentOutcome?: string
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      functionalSkillsIndicator?: boolean
      /**
       * Format: int32
       * @description Funding adjustment hours from prior learning
       */
      fundingAdjustmentPriorLearning?: number
      /** @description Funding Model for a Course */
      fundingModel?: string
      /**
       * @description Funding type for a course
       * @example DPS, PEF, The Clink, etc...
       */
      fundingType?: string
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      gceIndicator?: boolean
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      gcsIndicator?: boolean
      /**
       * @description Indicates if the course is accredited
       * @example false
       */
      isAccredited?: boolean
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      keySkillsIndicator?: boolean
      /**
       * @description Learners aim on Course
       * @example Pragramme aim, Component learning aim within programme etc..
       */
      learnersAimType?: string
      /**
       * Format: date
       * @description Actual Course end date
       */
      learningActualEndDate?: string
      /**
       * Format: date
       * @description Planned Course end date
       */
      learningPlannedEndDate?: string
      /**
       * Format: date
       * @description Course start date
       */
      learningStartDate?: string
      /**
       * Format: int32
       * @description Number of Guided Learning hours from LRS
       */
      lrsGLH?: number
      /** @description Course Indicator from LRS */
      miNotionalNVQLevelV2?: string
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      occupationalIndicator?: boolean
      /**
       * @description Outcome of Course
       * @example Achieved, Partially Achieved, etc...
       */
      outcome?: string
      /**
       * @description Outcome grade of Course
       * @example Passed, Merit, Failed, Distinction, etc..
       */
      outcomeGrade?: string
      /**
       * @description Withdrawal reason if the learner withdraws from course
       * @example Moved to another establishment or release, ill health, etc...
       */
      prisonWithdrawalReason?: string
      /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      qcfCertificateIndicator?: boolean
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      qcfDiplomaIndicator?: boolean
      /**
       * @description Course Indicator from LRS
       * @example false
       */
      qcfIndicator?: boolean
      /** @description Course Indicator from LRS */
      sectorSubjectAreaTier1?: string
      /** @description Course Indicator from LRS */
      sectorSubjectAreaTier2?: string
      /**
       * Format: int32
       * @description Course Indicator from LRS
       */
      subcontractedPartnershipUKPRN?: number
      /** @description Course Indicator from LRS */
      unitType?: string
      /**
       * @description Indicates if withdrawal is agreed or not
       * @example false
       */
      withdrawalReasonAgreed?: boolean
      /** @description Withdrawal reason (defaulted to Other) populated for the courses which are withdrawn */
      withdrawalReasons?: string
    }
    /** LearnerEducationPage */
    LearnerEducationPage: {
      content?: components['schemas']['LearnerEducationDTO'][]
      empty?: boolean
      first?: boolean
      last?: boolean
      /** Format: int32 */
      number?: number
      /** Format: int32 */
      numberOfElements?: number
      pageable?: components['schemas']['Pageable']
      /** Format: int32 */
      size?: number
      sort?: components['schemas']['Sort']
      /** Format: int32 */
      totalElements?: number
      /** Format: int32 */
      totalPages?: number
    }
    /** LearnerEmployabilitySkillsDTO */
    LearnerEmployabilitySkillsDTO: {
      /**
       * Format: date
       * @description Activity End Date
       */
      activityEndDate?: string
      /** @description Activity Location */
      activityLocation?: string
      /**
       * Format: date
       * @description Activity Start Date
       */
      activityStartDate?: string
      /** @description Prison Post code of a location where this skill is under taken */
      deliveryLocationPostCode?: string
      /**
       * @description Skill Delivery Method
       * @enum {string}
       */
      deliveryMethodType?: 'Face to Face, Blended Learning, Classroom Only Learning, Pack Only Learning'
      /**
       * @description Employability Skill
       * @enum {string}
       */
      employabilitySkill?: 'Adaptability, Attitudes and Behaviour, Communication, Creativity, Initiative, Organisation, Planning, Problem Solving, Reliability, Timekeeping'
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      reviews?: components['schemas']['EmployabilitySkillsReviewDTO'][]
    }
    /** LearnerGoalsDTO */
    LearnerGoalsDTO: {
      employmentGoals?: string[]
      longTermGoals?: string[]
      personalGoals?: string[]
      prn?: string
      shortTermGoals?: string[]
    }
    /** LearnerLatestAssessmentDTO */
    LearnerLatestAssessmentDTO: {
      /**
       * @description NOMIS Assigned Offender Number (Prisoner Identifier)
       * @example A1234AA
       */
      prn?: string
      qualifications?: components['schemas']['LearnerAssessmentDTO'][]
    }
    /** LearnerLatestAssessmentV1DTO */
    LearnerLatestAssessmentV1DTO: {
      ldd?: components['schemas']['LearnerLddInfoExternalV1DTO'][]
      /**
       * @description NOMIS Assigned Offender Number (Prisoner Identifier)
       * @example A1234AA
       */
      prn?: string
      qualifications?: components['schemas']['LearnerAssessmentV1DTO'][]
    }
    /** LearnerLddInfoExternalV1DTO */
    LearnerLddInfoExternalV1DTO: {
      establishmentId?: string
      establishmentName?: string
      /** Format: date */
      inDepthAssessmentDate?: string
      lddPrimaryName?: string
      lddSecondaryNames?: string[]
      /** Format: date */
      rapidAssessmentDate?: string
    }
    /** LearnerNeurodivergenceDTO */
    LearnerNeurodivergenceDTO: {
      /**
       * Format: date
       * @description Assessment Date
       */
      assessmentDate?: string
      /** @description NOMIS Establishment ID */
      establishmentId?: string
      /** @description NOMIS Establishment Name */
      establishmentName?: string
      /** @description Learner Neurodivergence Assessed */
      neurodivergenceAssessed?: string[]
      /** @description Learner Neurodivergence Self-Declared */
      neurodivergenceSelfDeclared?: string[]
      /** @description Learner Neurodivergence Support */
      neurodivergenceSupport?: string[]
      /** @description NOMIS Assigned Offender Number */
      prn?: string
      /**
       * Format: date
       * @description Self-Declared Date
       */
      selfDeclaredDate?: string
      /**
       * Format: date
       * @description Support Date
       */
      supportDate?: string
    }
    /** LearnerProfileDTO */
    LearnerProfileDTO: {
      /** @description Additional LDD and Health Problems */
      additionalLDDAndHealthProblems?: string[]
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      /**
       * Format: date
       * @description In-Depth Assessment Date
       */
      inDepthAssessmentDate?: string
      /** @description Language Status */
      languageStatus?: string
      /** @description Learner Self Assessment LDD and Health Problem */
      lddHealthProblem?: string
      /**
       * Format: int32
       * @description Planned Learning Hours
       */
      plannedHours?: number
      /** @description Primary LDD and Health Problem */
      primaryLDDAndHealthProblem?: string
      /** @description Overall attainment level of learners that have achieved various combinations of qualifications */
      priorAttainment?: string
      /**
       * @description NOMIS Assigned Offender Number (Prisoner Identifier)
       * @example A1234AA
       */
      prn?: string
      qualifications?: components['schemas']['AssessmentDTO'][]
      /**
       * Format: date
       * @description Rapid Assessment Date
       */
      rapidAssessmentDate?: string
      /**
       * @description Unique Learner Number
       * @example 9999999999
       */
      uln?: string
    }
    /** LearnerQualificationsDTO */
    LearnerQualificationsDTO: {
      /**
       * @description Learners aim on course
       * @example Pragramme aim, Component learning aim within programme etc..
       */
      aimType?: string
      /**
       * @description Course completion Status
       * @example Continuing, Completed, Withdrawn, Temporarily withdrawn
       */
      completionStatus?: string
      /** @description Qualification delivery approach */
      deliveryApproach?: string
      /** @description Post code of a location where this course is getting delivered */
      deliveryLocationpostcode?: string
      /** @description Establishment (prison) identifier */
      establishmentId?: string
      /** @description Establishment (prison) name */
      establishmentName?: string
      /**
       * @description Funding type for a course
       * @example DPS, PES, The Clink, Previous Contract etc...
       */
      fundingType?: string
      /**
       * @description Indicates if the course is accredited
       * @example false
       */
      isAccredited?: boolean
      /** @description Learner on remand */
      learnerOnRemand?: string
      /**
       * Format: date
       * @description Actual qualification end date
       */
      learningActualEndDate?: string
      /**
       * Format: date
       * @description Planned qualification end date
       */
      learningPlannedEndDate?: string
      /**
       * Format: date
       * @description Qualification start date
       */
      learningStartDate?: string
      /**
       * @description Outcome of Course
       * @example Achieved, Partially Achieved, etc...
       */
      outcome?: string
      /**
       * Format: date
       * @description Qualification outcome date
       */
      outcomeDate?: string
      /**
       * @description Outcome grade of Course
       * @example Passed, Merit, Failed, Distinction, etc..
       */
      outcomeGrade?: string
      /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
      prn?: string
      /** @description Qualification code */
      qualificationCode?: string
      /** @description Qualification name */
      qualificationName?: string
      /** @description Withdrawal reason (defaulted to Other) populated for the courses which are withdrawn */
      withdrawalReason?: string
      /** @description Indicates if withdrawal is agreed or not */
      withdrawalReasonAgreed?: string
      /**
       * @description Indicates if withdrawal is reviewed or not
       * @example false
       */
      withdrawalReviewed?: boolean
    }
    /** Pageable */
    Pageable: {
      /** Format: int64 */
      offset?: number
      /** Format: int32 */
      pageNumber?: number
      /** Format: int32 */
      pageSize?: number
      paged?: boolean
      sort?: components['schemas']['Sort']
      unpaged?: boolean
    }
    /** ResponseDTO */
    ResponseDTO: {
      message?: components['schemas']['SuccessResponseDTO']
      responseObject?: Record<string, never>
    }
    /** Sort */
    Sort: {
      empty?: boolean
      sorted?: boolean
      unsorted?: boolean
    }
    /** SuccessResponseDTO */
    SuccessResponseDTO: {
      /** Format: int32 */
      httpStatusCode?: number
      successCode?: string
      successMessage?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  createEmployerUsingPOST: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['EmployerDTO']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ResponseDTO']
        }
      }
      /** @description Success */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  deleteEmployerUsingDELETE: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Unique generated employer Id */
        empId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ResponseDTO']
        }
      }
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  updateEmployerUsingPUT: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Employer Unique Id ) */
        id: number
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['EmployerDTO']
      }
    }
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ResponseDTO']
        }
      }
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getHealthUsingGET: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': string
        }
      }
      /** @description Unauthorized */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Forbidden */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  createJobsPrisonLeaversUsingPOST: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['JobsPrisonLeaversDTO']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ResponseDTO']
        }
      }
      /** @description Sucess */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  updateJobsPrisonLeaversUsingPUT: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description id */
        id: number
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['JobsPrisonLeaversDTO']
      }
    }
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ResponseDTO']
        }
      }
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  deleteJobsPrisonLeaversUsingDELETE: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Unique generated job Id */
        jobId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Sucess */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['ResponseDTO']
        }
      }
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Bad request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLearnerLatestAssessmentsUsingGET: {
    parameters: {
      query?: {
        /** @description The establishment the learner is or was resident in */
        establishmentId?: string
      }
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LearnerLatestAssessmentDTO'][]
        }
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLearnerAssessmentsUsingGET: {
    parameters: {
      query?: {
        /** @description The establishment the learner is or was resident in */
        establishmentId?: string
      }
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          '*/*': components['schemas']['AllAssessmentDTO']
        }
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLearnerEducationUsingGET: {
    parameters: {
      query?: {
        /** @description The establishment the learner is or was resident in */
        establishmentId?: string
      }
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LearnerProfileDTO'][]
        }
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLearnerEducationUsingGET_1: {
    parameters: {
      query?: {
        /** @description Actual guided learning hours allocated to course */
        actualGLH?: number
        /** @description Course Code */
        courseCode?: string
        /** @description Course Name */
        courseName?: string
        /** @description The establishment the learner is or was resident in. */
        establishmentId?: string
        /** @description Accredited or not */
        isAccredited?: string
        /** @description Whether the education is current or not */
        isCurrent?: boolean
        /** @description Planned Course End Date */
        learningPlannedEndDate?: string
        /** @description Course Start Date */
        learningStartDate?: string
        /** @description The page to be returned */
        page?: number
        /** @description Number of items to be returned. */
        size?: number
        /** @description Parameter on which the records are to be sorted */
        sort?: string[]
      }
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LearnerEducationPage']
        }
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getEmployabilitySkillsUsingGET: {
    parameters: {
      query?: {
        /** @description Employability Skill */
        employabilitySkill?: string
        /** @description The establishment the learner is or was resident in. */
        establishmentId?: string
        /** @description The page to be returned */
        page?: number
        /** @description Number of items to be returned. */
        size?: number
        /** @description Parameter on which the records are to be sorted */
        sort?: string[]
      }
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['EmployabilitySkillsPage']
        }
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLearnerGoalsUsingGET: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LearnerGoalsDTO']
        }
      }
      /** @description Invalid token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLearnerNeurodivergenceUsingGET: {
    parameters: {
      query?: {
        /** @description The establishment the learner is or was resident in */
        establishmentId?: string
      }
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['LearnerNeurodivergenceDTO'][]
        }
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getLearnerEducationUsingGET_2: {
    parameters: {
      query?: {
        /** @description Course code */
        courseCode?: number
        /** @description Course Name */
        courseName?: string
        /** @description Establishment Id */
        establishmentId?: string
        /** @description Accredited qualificaton or not */
        isAccredited?: string
        /** @description Planned Course End Date */
        learningPlannedEndDate?: string
        /** @description Course Start Date */
        learningStartDate?: string
      }
      header?: never
      path: {
        /** @description NOMIS Assigned Offender Number (Prisoner Identifier) */
        prn: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Success */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AllQualificationsDTO']
        }
      }
      /** @description Authentication required */
      401: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Access denied */
      403: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Resource not found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
